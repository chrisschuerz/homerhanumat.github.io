<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A Statistics Blog]]></title>
  <link href="http://statistics.rainandrhino.org/atom.xml" rel="self"/>
  <link href="http://statistics.rainandrhino.org/"/>
  <updated>2014-09-15T16:56:05-04:00</updated>
  <id>http://statistics.rainandrhino.org/</id>
  <author>
    <name><![CDATA[Homer White]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google Charts in R Markdown]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/09/03/google-charts/"/>
    <updated>2014-09-03T16:30:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/09/03/google-charts</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#extrapolation">Extrapolation</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>An excellent little post (<a href="http://lamages.blogspot.com/2014/09/zoom-zoom-googlevis.html">Zoom, zoom googleVis</a>) showed up recently on <a href="http://www.r-bloggers.com/">R-Bloggers</a>.  The author Markus Gesmann is the maintainer of the <code>googleVis</code> package that links R to the <a href="https://developers.google.com/chart/interactive/docs/gallery">Google Charts API</a>.  My first thought was:  could I embed charts like those in R Markdown documents that could knit to ioslides or other formats suitable for use in my elementary statistics classes?</p>

<p>A quick look at the documentation showed that it’s very easy indeed to do this sort of thing.</p>

<h2 id="extrapolation">Extrapolation</h2>

<p>Suppose, for example, that you want to illustrate to students the risks associated with extrapolation.  You begin by reminding them of the experience they had back in high school with their graphing calculators, when they zoomed in on a curve:  zoom in close enough, and it looks like a straight line.</p>

<p>Then you point out that for the most part we live our lives from a “zoomed-in” perspective, at least where data is concerned.  In situations where we are interested in a pair of numerical measurements on individuals, we usually possess $y$-values for only a fairly narrow range of $x$-values.  Hence it is likely that a scatter plot we make from our “zoomed-in” data will show a roughly linear relationship, even though on a global scale the “real” relationship probably is some kind of a curve.</p>

<p>The app below (a slight modification of the example in Gesmann’s post) makes the point in a flash.  Click and drag to establish a zoom region, right-click to reset:</p>

<!-- ScatterChart generated in R 3.1.1 by googleVis 0.5.5 package -->
<!-- Wed Sep  3 22:51:01 2014 -->

<!-- jsHeader -->
<script type="text/javascript">
 
// jsData 
function gvisDataZoomZoom () {
var data = new google.visualization.DataTable();
var datajson =
[
 [
 0,
2537.697212 
],
[
 0.5,
2480.404837 
],
[
 1,
2291.197683 
],
[
 1.5,
2239.20941 
],
[
 2,
2024.346568 
],
[
 2.5,
2328.30735 
],
[
 3,
2302.912102 
],
[
 3.5,
2139.312225 
],
[
 4,
2291.913135 
],
[
 4.5,
2081.986679 
],
[
 5,
1939.687718 
],
[
 5.5,
2071.175918 
],
[
 6,
2055.637296 
],
[
 6.5,
1855.09161 
],
[
 7,
1836.673977 
],
[
 7.5,
1986.254312 
],
[
 8,
1934.399588 
],
[
 8.5,
1418.373539 
],
[
 9,
1452.102505 
],
[
 9.5,
1646.080349 
],
[
 10,
1817.436525 
],
[
 10.5,
1670.068265 
],
[
 11,
1552.822032 
],
[
 11.5,
1474.935244 
],
[
 12,
1527.426874 
],
[
 12.5,
1426.125064 
],
[
 13,
1498.784138 
],
[
 13.5,
1425.921831 
],
[
 14,
1281.256681 
],
[
 14.5,
1271.293199 
],
[
 15,
1143.749534 
],
[
 15.5,
1115.879783 
],
[
 16,
1265.534507 
],
[
 16.5,
1365.787371 
],
[
 17,
1127.811847 
],
[
 17.5,
1085.312767 
],
[
 18,
995.4401713 
],
[
 18.5,
999.8514718 
],
[
 19,
904.9701396 
],
[
 19.5,
974.9688372 
],
[
 20,
990.8501134 
],
[
 20.5,
819.7440402 
],
[
 21,
810.8995988 
],
[
 21.5,
739.6464023 
],
[
 22,
665.9922973 
],
[
 22.5,
781.5574713 
],
[
 23,
691.9288703 
],
[
 23.5,
704.4679564 
],
[
 24,
742.0044122 
],
[
 24.5,
699.1293635 
],
[
 25,
606.1210083 
],
[
 25.5,
660.3859521 
],
[
 26,
508.6239947 
],
[
 26.5,
599.8550241 
],
[
 27,
540.8753228 
],
[
 27.5,
518.3726283 
],
[
 28,
465.3953206 
],
[
 28.5,
329.4228811 
],
[
 29,
384.3077049 
],
[
 29.5,
478.1333933 
],
[
 30,
590.9037231 
],
[
 30.5,
405.3257043 
],
[
 31,
201.1684941 
],
[
 31.5,
662.4131747 
],
[
 32,
419.5235375 
],
[
 32.5,
343.1144616 
],
[
 33,
381.2919068 
],
[
 33.5,
251.6978654 
],
[
 34,
265.2966701 
],
[
 34.5,
257.076218 
],
[
 35,
304.5839125 
],
[
 35.5,
374.8505607 
],
[
 36,
24.30756836 
],
[
 36.5,
150.4156894 
],
[
 37,
78.5860028 
],
[
 37.5,
85.85072033 
],
[
 38,
-33.80994618 
],
[
 38.5,
60.02448374 
],
[
 39,
125.615421 
],
[
 39.5,
134.6158021 
],
[
 40,
162.8331306 
],
[
 40.5,
87.78614177 
],
[
 41,
312.4153309 
],
[
 41.5,
89.97102573 
],
[
 42,
-38.44147667 
],
[
 42.5,
283.7181301 
],
[
 43,
-139.9056665 
],
[
 43.5,
151.6451601 
],
[
 44,
220.6167027 
],
[
 44.5,
82.35326735 
],
[
 45,
-128.2962108 
],
[
 45.5,
-173.6864969 
],
[
 46,
64.69165381 
],
[
 46.5,
136.7736691 
],
[
 47,
-12.72734263 
],
[
 47.5,
-71.70931145 
],
[
 48,
38.88744997 
],
[
 48.5,
70.422425 
],
[
 49,
-52.14613874 
],
[
 49.5,
-67.48934215 
],
[
 50,
-172.8783941 
],
[
 50.5,
-98.87609916 
],
[
 51,
-57.55055617 
],
[
 51.5,
40.6021748 
],
[
 52,
78.66649197 
],
[
 52.5,
-86.59209118 
],
[
 53,
-24.81762967 
],
[
 53.5,
166.7614015 
],
[
 54,
42.65088778 
],
[
 54.5,
50.20339324 
],
[
 55,
-7.280201955 
],
[
 55.5,
173.7847433 
],
[
 56,
136.6527204 
],
[
 56.5,
-129.6913636 
],
[
 57,
78.89204617 
],
[
 57.5,
-26.2225636 
],
[
 58,
-55.95898328 
],
[
 58.5,
-55.38871173 
],
[
 59,
68.68219333 
],
[
 59.5,
306.8442199 
],
[
 60,
68.77170251 
],
[
 60.5,
146.9939225 
],
[
 61,
247.9439261 
],
[
 61.5,
-94.23538391 
],
[
 62,
15.01500904 
],
[
 62.5,
175.0385938 
],
[
 63,
244.1642855 
],
[
 63.5,
360.7181336 
],
[
 64,
346.8271736 
],
[
 64.5,
114.9338291 
],
[
 65,
235.342274 
],
[
 65.5,
179.6939502 
],
[
 66,
246.2399374 
],
[
 66.5,
259.9051893 
],
[
 67,
184.5320483 
],
[
 67.5,
298.762966 
],
[
 68,
500.0135333 
],
[
 68.5,
199.0380413 
],
[
 69,
627.2201028 
],
[
 69.5,
251.1308468 
],
[
 70,
401.5101774 
],
[
 70.5,
416.2819428 
],
[
 71,
660.1440323 
],
[
 71.5,
264.606245 
],
[
 72,
530.3665665 
],
[
 72.5,
480.0287843 
],
[
 73,
415.4285494 
],
[
 73.5,
573.3799481 
],
[
 74,
585.9427928 
],
[
 74.5,
294.5816348 
],
[
 75,
590.2863346 
],
[
 75.5,
455.5873842 
],
[
 76,
654.3923354 
],
[
 76.5,
557.3303521 
],
[
 77,
763.5434061 
],
[
 77.5,
775.0702394 
],
[
 78,
671.2147217 
],
[
 78.5,
817.2950343 
],
[
 79,
772.7300908 
],
[
 79.5,
935.0553817 
],
[
 80,
961.0364487 
],
[
 80.5,
878.9843067 
],
[
 81,
1036.440589 
],
[
 81.5,
1011.060497 
],
[
 82,
831.1714369 
],
[
 82.5,
1179.832136 
],
[
 83,
1121.827731 
],
[
 83.5,
1036.758551 
],
[
 84,
966.4311784 
],
[
 84.5,
1274.919241 
],
[
 85,
1349.402511 
],
[
 85.5,
1283.875996 
],
[
 86,
1219.930646 
],
[
 86.5,
1409.472096 
],
[
 87,
1435.155675 
],
[
 87.5,
1246.876663 
],
[
 88,
1224.965309 
],
[
 88.5,
1364.574604 
],
[
 89,
1626.000513 
],
[
 89.5,
1559.679692 
],
[
 90,
1572.398767 
],
[
 90.5,
1725.102129 
],
[
 91,
1576.106534 
],
[
 91.5,
1548.891366 
],
[
 92,
2005.413909 
],
[
 92.5,
1786.685823 
],
[
 93,
1941.678696 
],
[
 93.5,
1820.903637 
],
[
 94,
1806.025829 
],
[
 94.5,
2068.67964 
],
[
 95,
2145.064152 
],
[
 95.5,
1953.216022 
],
[
 96,
2192.147189 
],
[
 96.5,
2249.259024 
],
[
 97,
2136.275729 
],
[
 97.5,
2318.912073 
],
[
 98,
2194.855727 
],
[
 98.5,
2300.640547 
],
[
 99,
2402.693396 
],
[
 99.5,
2516.349069 
],
[
 100,
2427.046688 
] 
];
data.addColumn('number','x');
data.addColumn('number','y');
data.addRows(datajson);
return(data);
}
 
// jsDrawChart
function drawChartZoomZoom() {
var data = gvisDataZoomZoom();
var options = {};
options["allowHtml"] = true;
options["explorer"] = {actions: ['dragToZoom',
                     'rightClickToReset'],
                     maxZoomIn:0.05};
options["chartArea"] = {width:'85%',height:'80%'};
options["hAxis"] = {title: 'Explanatory x',
                     titleTextStyle: {color: '#000000'}};
options["vAxis"] = {title: 'Response y',
                     titleTextStyle: {color: '#000000'}};
options["title"] = "Curvilinear Relationship";
options["width"] =    550;
options["height"] =    500;
options["legend"] = "none";

    var chart = new google.visualization.ScatterChart(
    document.getElementById('ZoomZoom')
    );
    chart.draw(data,options);
    

}
  
 
// jsDisplayChart
(function() {
var pkgs = window.__gvisPackages = window.__gvisPackages || [];
var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
var chartid = "corechart";
  
// Manually see if chartid is in pkgs (not all browsers support Array.indexOf)
var i, newPackage = true;
for (i = 0; newPackage && i < pkgs.length; i++) {
if (pkgs[i] === chartid)
newPackage = false;
}
if (newPackage)
  pkgs.push(chartid);
  
// Add the drawChart function to the global list of callbacks
callbacks.push(drawChartZoomZoom);
})();
function displayChartZoomZoom() {
  var pkgs = window.__gvisPackages = window.__gvisPackages || [];
  var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];
  window.clearTimeout(window.__gvisLoad);
  // The timeout is set to 100 because otherwise the container div we are
  // targeting might not be part of the document yet
  window.__gvisLoad = setTimeout(function() {
  var pkgCount = pkgs.length;
  google.load("visualization", "1", { packages:pkgs, callback: function() {
  if (pkgCount != pkgs.length) {
  // Race condition where another setTimeout call snuck in after us; if
  // that call added a package, we must not shift its callback
  return;
}
while (callbacks.length > 0)
callbacks.shift()();
} });
}, 100);
}
 
// jsFooter
</script>

<!-- jsChart -->
<script type="text/javascript" src="https://www.google.com/jsapi?callback=displayChartZoomZoom"></script>

<!-- divChart -->

<div id="ZoomZoom" style="width: 550; height: 500;">
</div>

<p>All we needed was the following code (be sure to add the chunk option <code>results='asis'</code>):</p>

<pre><code>set.seed(2020)
x &lt;- seq(0,100,by=0.5)
y &lt;- (50-x)^2+rnorm(length(x),sd=100)
 
curvy &lt;- data.frame(x,y)
 
 
gvScat &lt;- gvisScatterChart(curvy,
                   options=list(
                     explorer="{actions: ['dragToZoom',
                     'rightClickToReset'],
                     maxZoomIn:0.05}",
                     chartArea="{width:'85%',height:'80%'}",
                     hAxis="{title: 'Explanatory x',
                     titleTextStyle: {color: '#000000'}}",
                     vAxis="{title: 'Response y',
                     titleTextStyle: {color: '#000000'}}",
                     title="Curvilinear Relationship",
                     width=550, height=500,
                     legend="none"),
                   chartid="ZoomZoom")
 
print(gvScat,'chart')
</code></pre>

<p>The same approach works in any R Markdown document (including the source document for this Octopress-powered post).  I will certainly take a closer look at <code>googleVis</code>:  thanks, Markus!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Wine in an Old Bottle: R Markdown V2 and R Studio on the Cent OS Server]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/08/27/r-studio-server-centos-pandoc-latex/"/>
    <updated>2014-08-27T21:00:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/08/27/r-studio-server-centos-pandoc-latex</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#new-pandoc">New Pandoc</a></li>
  <li><a href="#installing-latex-packages">Installing LaTeX Packages</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>R Markdown Version 2 is a boon to students:  with a single click one can convert an R Markdown file to either HTML, PDF or Word format.  However, getting this feature to work fully in the R Studio server environment may require a bit of work, especially if you running the Server on a Cent OS distribution.  Although I am sure that Cent OS has many virtues, an up-to-date repository is not among them.</p>

<p>This post is the record of an arm wrasslin’ match with Cent OS and the R Studio Server version 0.98.932, from which I emerged more or less victorious.  If your IT department hosts RStudio on CentOS, then perhaps the following remarks will make your life a bit easier.  On the other hand,  if you know your way around Linux better than I do, please feel free to offer quicker or better solutions in the Comments.</p>

<p>Log on to the server, perhaps through <code>ssh</code> (secure shell).  Come armed with administrative privileges.</p>

<h2 id="new-pandoc">New Pandoc</h2>

<p>R Markdown v2 uses a newer version of the <code>pandoc</code>converter than the one available in the Cent OS repository.  Fortunately, R Studio comes bundled with the binaries of a sufficiently recent version of <code>pandoc</code>.  You obtain access to these files by establishing symbolic links in the <code>/usr/local/bin</code> directory to the <code>pandoc</code> and <code>pandoc-cite</code> binaries:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin
</span><span class="line">sudo ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="installing-latex-packages">Installing LaTeX Packages</h2>

<p>You can get Tex Live from the Cent OS repositories, but the release appears to date back to the year 2007.  Therefore it lacks a couple of packages needed by <code>pandoc</code>:</p>

<ul>
  <li>Heiko Oberdiek’s <a href="http://www.ctan.org/pkg/ifluatex">ifluatex</a>, and </li>
  <li>Donald Arsenau’s <a href="http://www.ctan.org/pkg/framed">framed</a>.</li>
</ul>

<p>Since you will download these packages from the Comprehensive Tex Archive Network, you’ll want a web-fetch utility such as <code>wget</code>.  If it’s not already installed on Cent OS, you can get it with:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo yum install wget
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now you can grab the relevant files with <code>wget</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">wget http://www.ctan.org/tex-archive/macros/latex/contrib/oberdiek/ifluatex.dtx
</span><span class="line">wget http://mirrors.ctan.org/macros/latex/contrib/framed.zip
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Turning first to <code>ifluatex</code>, we begin by by unpacking the <code>.dtx</code> bundle.  This is accomplished with a <code>tex</code> command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">tex ifluatex.dtx
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Several files spill out into your Home directory.  You care only about <code>ifluatex.sty</code>.  Copy it as follows:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo cp ifluatex.sty /usr/share/texmf/tex/generic/oberdiek
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>As for the <code>framed</code> package, you must first unzip the downloaded file into a directory:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">mkdir framed
</span><span class="line">unzip framed.zip -d framed
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now copy the <code>framed</code> directory as follows:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo cp -rf framed /usr/share/texmf/tex/latex
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Finally, you need to make tex aware of the existence of these new packages with <code>texhash</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo texhash
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now you may Knit to your heart’s content!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Five Reasons to Teach Elementary Statistics With R: #3]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/05/04/reasons-to-teach-with-R-3/"/>
    <updated>2014-05-04T21:00:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/05/04/reasons-to-teach-with-R-3</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#reason-3--rstudios-shiny">Reason #3:  RStudio’s <code>shiny</code></a></li>
  <li><a href="#examples">Examples</a>    <ul>
      <li><a href="#slow-simulation">“Slow” Simulation</a></li>
      <li><a href="#understanding-model-assumptions">Understanding Model Assumptions</a></li>
      <li><a href="#types-of-error">Types of Error</a></li>
      <li><a href="#illustrating-fine-points">Illustrating Fine Points</a></li>
      <li><a href="#playing-games">Playing Games</a></li>
    </ul>
  </li>
  <li><a href="#shiny-vs-manipulate">Shiny vs. <code>manipulate</code></a></li>
  <li><a href="#instructional-apps-gallery">Instructional Apps Gallery?</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>This is the third in a projected five-part series of posts aimed at colleagues who teach elementary statistics.  If you teach with R but hesitate to spring such a powerful and complex tool on unsuspecting introductory students—many of whom whom will have had no prior experience with the command line, much less with coding—then I hope these posts will give you some encouragement.</p>

<p>The <a href="http://statistics.rainandrhino.org/blog/2014/04/08/reasons-to-teach-with-R-2/">previous post</a> in this series described R Studio’s package <code>manipulate</code> and its applications in the easy authoring of instructional applets.  Today we’ll look at <code>shiny</code>, a related RStudio project.</p>

<p>In order to try the ensuing examples, download an ancillary package that we use for our elementary course:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="s"><span class="line">require<span class="p">(</span>devtools<span class="p">)</span>
</span><span class="line">install_github<span class="p">(</span>repo<span class="o">=</span><span class="s">&quot;homerhanumat/tigerstats&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="reason-3--rstudios-shiny">Reason #3:  RStudio’s <code>shiny</code></h2>

<p><a href="https://www.rstudio.com/shiny/">Shiny</a> appears to be intended primarily for data analysts working in industry or in academic or institutional research, but on the very day of its public release Victor Moreno pointed out its implications for statistics education (see his comment on <a href="http://blog.rstudio.org/2012/11/08/introducing-shiny/">this RStudio blog post</a>).  For statistics instructors Shiny offers essentially the same benefits as <code>manipulate</code>, but in addition comes pimped out with:</p>

<ul>
  <li>options for dynamic user input;</li>
  <li>output formats that go well beyond <code>manipulate</code>’s home in the Plots pane;</li>
  <li>default Bootstrap styling.</li>
</ul>

<h2 id="examples">Examples</h2>

<h3 id="slow-simulation">“Slow” Simulation</h3>

<p>At my College we believe that simulation is important to understanding probability concepts, but we also find that our students don’t easily grasp the import of a simulation when the computers simply generates, say, 3000 re-samples and summarizes the results, <em>all in flash</em>.  We feel the need for plenty of “one at a time” simulation experiences that serve as transitions to the analysis of large-scale simulation results, and we don’t always find apps on the web that cater to our needs in just the way we would like.</p>

<p>Suppose for example you are wondering whether a certain die is loaded.  You don’t want to crack it open, so you roll it sixty times, getting the following results:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"><strong>Spots</strong></th>
      <th style="text-align: center">One</th>
      <th style="text-align: center">Two</th>
      <th style="text-align: center">Three</th>
      <th style="text-align: center">Four</th>
      <th style="text-align: center">Five</th>
      <th style="text-align: center">Six</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><strong>Freq</strong></td>
      <td style="text-align: center">8</td>
      <td style="text-align: center">18</td>
      <td style="text-align: center">11</td>
      <td style="text-align: center">7</td>
      <td style="text-align: center">9</td>
      <td style="text-align: center">7</td>
    </tr>
  </tbody>
</table>

<p>This looks like an awful lot of two-spots, but we were not expecting this in advance.  By this point in the course students have been made aware of the perils of “data snooping” and hence should be disinclined to employ an inferential procedure that is based specifically on a pattern that one happens to notice in one’s data.  Therefore, rather than perform inferential procedures keyed to “Two-spot” side of the die, we might turn instead to the chi-square statistic as a neutral measure of the difference between the observed results and what one would expect if the die were fair.</p>

<p>The situation is addressed in this Shiny app:</p>

<p><a href="http://rstudio.georgetowncollege.edu:3838/SlowGoodness">http://rstudio.georgetowncollege.edu:3838/SlowGoodness</a></p>

<p>After re-sampling for a few minutes, students are convinced that it’s not so unlikely, after all to get results like the ones we observed, if the die is fair all along.</p>

<p>Students are then prepared to understand a full-scale re-sampling simulation like the following one:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="s"><span class="line">require<span class="p">(</span>tigerstats<span class="p">)</span>
</span><span class="line">observed <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">8</span><span class="p">,</span><span class="m">18</span><span class="p">,</span><span class="m">11</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">9</span><span class="p">,</span><span class="m">7</span><span class="p">)</span>
</span><span class="line">fair <span class="o">&lt;-</span> rep<span class="p">(</span><span class="m">1</span><span class="o">/</span><span class="m">6</span><span class="p">,</span><span class="m">6</span><span class="p">)</span>
</span><span class="line">set.seed<span class="p">(</span><span class="m">2020</span><span class="p">)</span>
</span><span class="line">chisqtestGC<span class="p">(</span>observed<span class="p">,</span>p<span class="o">=</span>fair<span class="p">,</span>
</span><span class="line">      simulate.p.value<span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span>
</span><span class="line">      B<span class="o">=</span><span class="m">3000</span><span class="p">,</span>graph<span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<pre><code>## Pearson's chi-squared test with simulated p-value 
## 	 (based on 3000 resamples)
## 
##   observed counts Expected by Null contribution to chisq statistic
## A               8               10                             0.4
## B              18               10                             6.4
## C              11               10                             0.1
## D               7               10                             0.9
## E               9               10                             0.1
## F               7               10                             0.9
## 
## 
## Chi-Square Statistic = 8.8 
## Degrees of Freedom of the table = 5 
## P-Value = 0.125
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/reasonsteachr3chisq.png" alt="plot of chunk reasonsteachr3chisq" /> </p>

<p>Sure enough, if the die is fair then there is a reasonably good chance—about 12.5%—of getting results at least as extreme as the ones we got in our 60 rolls.</p>

<p><strong>Note:</strong>  Shiny users know that the apps are liable to run more quickly if you run them locally.  To run the foregoing app locally from an R session, pull it out of the <code>tigerstats</code> package:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">require<span class="p">(</span>shiny<span class="p">)</span>
</span><span class="line">runApp<span class="p">(</span>system.file<span class="p">(</span><span class="s">&quot;SlowGoodness&quot;</span><span class="p">,</span>package<span class="o">=</span><span class="s">&quot;tigerstats&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="understanding-model-assumptions">Understanding Model Assumptions</h3>

<p>Students tend to be somewhat rigid in their handling of “safety checks”—the diagnostics they are instructed to perform in order to judge whether the statistical model underlying a given inferential procedure is appropriate to the data at hand.  This rigidity stems partly from a lack of understanding of what the inferential procedure is intended to deliver (for example, that a method for making 95%-confidence intervals for a parameter should produce intervals that cover the parameter about 95% of the time in repeated sampling), and partly from a lack of experience with situations in which the mathematical assumptions of the model are not perfectly satisfied.</p>

<p>The following Shiny app:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">runApp<span class="p">(</span>system.file<span class="p">(</span><span class="s">&quot;CIMean&quot;</span><span class="p">,</span>package<span class="o">=</span><span class="s">&quot;tigerstats&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>addresses two learning outcomes:</p>

<ul>
  <li>coverage properties of confidence intervals (e.g, what “95% confidence” means, from a frequentist point of view);</li>
  <li>the effect on coverage properties, at various sample sizes, of departures from normality assumptions in procedures based upon the t-statistic.</li>
</ul>

<p>Both “slow” (one-at-a-time) simulation and large-scale simulation (5000 samples) are available to the student.</p>

<h3 id="types-of-error">Types of Error</h3>

<p>Simulation is also helpful in coming to understand such notions as the level of significance of a hypothesis test (i.e., the probability a true Null Hypothesis in repeated sampling), and the notion of power as well.  See the following app:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">runApp<span class="p">(</span>system.file<span class="p">(</span><span class="s">&quot;Type12Errors&quot;</span><span class="p">,</span>package<span class="o">=</span><span class="s">&quot;tigerstats&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="illustrating-fine-points">Illustrating Fine Points</h3>

<p>Sometimes you want to have an app on hand, not because it addresses a major course objective, but simply in case students ask a particular question.  For example, sometimes when the class is looking at a scatter plot—with regression line—of data that comes from a bivariate normal distribution, a student will remark that the regression line looks “too shallow”.  This root of this question is a confusion, in the student’s mind, between two purposes that a line might serve:</p>

<ul>
  <li>to provide a “linear summary”” of the scatter plot;</li>
  <li>to provide linear predictions, based on the scatter plot, of y-values from x-values.</li>
</ul>

<p>The so-called “SD line”—the line that runs through the point of averages and whose slope is the ratio of the standard deviation of the y-value to the standard deviation of the x-value—is well-suited to the former task, whereas the regression line is, of course, the right choice for the latter one.  When many students first look at a scatter plot, they see an SD line in their mind’s eye; when they get around to producing the regression line, it can look like a misfire.</p>

<p>The following app helps clear things up for students.  It is based on a discussion on the “shallow regression line” issue in <a href="http://books.wwnorton.com/books/Statistics/"><em>Statistics</em></a>, the classic text by Freeman, Pisani and Purves.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">runApp<span class="p">(</span>system.file<span class="p">(</span><span class="s">&quot;ShallowReg&quot;</span><span class="p">,</span>package<span class="o">=</span><span class="s">&quot;tigerstats&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="playing-games">Playing Games</h3>

<p>Here’s is yet another of those “find the regression line” apps that you see all over the web:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="s"><span class="line">runApp<span class="p">(</span>system.file<span class="p">(</span><span class="s">&quot;FindRegLine&quot;</span><span class="p">,</span>package<span class="o">=</span><span class="s">&quot;tigerstats&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>You have the option to keep score.  Your score is the sum of the number of times you have submitted a guess and the following “closeness measure”:</p>

<script type="math/tex; mode=display">100 \times \frac{\textbf{Your Line's Error-SS}-\textbf{Residual-SS}}{\textbf{Total-SS}-\textbf{Residual-SS}}.</script>

<h2 id="shiny-vs-manipulate">Shiny vs. <code>manipulate</code></h2>

<p>You don’t need to know much at all about web development in order to program in Shiny, but for R users there is the extra requirement of becoming comfortable with the reactive programming paradigm.  The hurdle is not all that high:  as an intermediate-level R-programmer, I was able to pick up Shiny over a weekend.  The <a href="http://shiny.rstudio.com/tutorial/">online Shiny tutorials</a> and a few consultations with <a href="http://stackoverflow.com/">Stack Overflow</a> provide almost everything I needed to know.</p>

<p>The pay-back for the extra learning is considerable.  Shiny apps permit a much more flexible user-interface, as compared to <code>manipulate</code>.  For example, it is easy to make input “dynamic”, in the sense that the requests that a user can make of the app can be easily made to depend upon previous choices that the user has made.  It’s also easy to provide plenty of written explanation for the activity, as it proceeds:  with <code>manipulate</code> apps this can be somewhat difficult.</p>

<p>On the other hand, since <code>manipulate</code> apps run directly within RStudio, they can easily be programmed to work with any data frame that the user specifies.  Shiny apps will allow you to upload a CSV file, but for elementary students this process is usually too much of a burden.</p>

<h2 id="instructional-apps-gallery">Instructional Apps Gallery?</h2>

<p><a href="http://www.showmeshiny.com/">Show Me Shiny</a> has some wonderful instructional apps.</p>

<p>Considering all of the buzz surrounding Shiny, I am baffled at how difficult it is has been for me to find other up-to-date sites featuring Shiny apps for statistics instruction.  Perhaps readers of this post could direct me to any that they know of.  Eventually it would be nice to develop something like a ShinyTeachingTube, which could serve as a central hub for Shiny instructional applets.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Course Management With the RStudio Server]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/05/02/perl-scripts-r-studio/"/>
    <updated>2014-05-02T21:00:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/05/02/perl-scripts-r-studio</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#installation">Installation</a></li>
  <li><a href="#establishing-a-common-source-folder">Establishing a “Common Source” Folder</a></li>
  <li><a href="#automated-assignment-collectionreturn">Automated Assignment Collection/Return</a>    <ul>
      <li><a href="#student-usernames">Student Usernames</a></li>
      <li><a href="#encrypting-your-password">Encrypting Your Password</a></li>
      <li><a href="#create-subdirectories">Create Subdirectories</a></li>
      <li><a href="#collect-assignments">Collect Assignments</a></li>
      <li><a href="#return-assignments">Return Assignments</a></li>
    </ul>
  </li>
  <li><a href="#bumps-on-the-road">Bumps on the Road</a></li>
  <li><a href="#props-to-the-sysadmin">Props to the Sysadmin</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>At my institution we teach both elementary and upper-level undergraduate statistics using R, in the environment of the <a href="https://www.rstudio.com/ide/download/">RStudio Linux server</a> installed and configured on our campus network.  Although students are made aware of the existence of the desktop version of RStudio and eventually are encouraged to install it on their personal machines, the default course environment is that of the server.</p>

<p>One reason for this choice is that the server allows us—instructors working in consultation with our sysadmin—to standardize the R environment (R version, installed packages, etc.) for all class members, so that if we add a feature or fix a problem we have some reasonable confidence that it will work for everyone.</p>

<p>Another reason—which constitutes the theme of this post—is that the server environment facilitates course management, especially in technical respects specific to a statistics course, where standard online content management systems such as Moodle or Blackboard may fall short.  The aim of this post is to record, for colleagues at our institution and for folks at other institutions who are considering making the switch to R, the principal ways in which in we have tweaked the server for course-management purposes.  R and RStudio are wonderful free software, but like all free software, they come with a certain “cost of ownership”, and those costs can be considerable if (like me) you begin with little in the way of programming/hacking skills.  I hope that the following information will reduce the ownership costs for others who choose to teach with R in a similar vein.</p>

<h2 id="installation">Installation</h2>

<p>I assume that you have persuaded your sysadmin to install and configure some version of the <a href="https://www.rstudio.com/ide/download/">RStudio Linux server</a>.  My sysadmin chose to set up the Cent OS version, and configured it so that all members of the campus community can access it by means of their username and password.</p>

<p>If your personal machine runs Linux—either the Ubuntu or Cent OS distribution—it’s a good idea to brush up on (or acquire) some very basic command-line skills and to install the server on your own machine as well, so you can replicate some of the strategies described below.  Just a little bit of knowledge of the innards—file permissions, etc.—pays off handsomely in being able to work with your sysadmin to diagnose and resolve quickly any problems that arise.  I myself run Ubuntu, but have not found significant differences between how the server works for me and how it works on campus.</p>

<h2 id="establishing-a-common-source-folder">Establishing a “Common Source” Folder</h2>

<p>Ask your sysadmin to grant superuser privileges t oyou and other course instructors.  Then one of you should create a folder in your Home directory on the server that will serve as a common source for course material.  The sysadmin can create a symbolic link to the folder and can set permissions so that all users may read files in the folder but only you and fellow instructors can write to it.  This folder serves as the repository for assignments, solutions, syllabi, etc.</p>

<p>If you are not the owner of the folder, you can get to it using the ellipses button in the upper right-hand corner of the Files pane.  Simply enter the path-name as specified by your sysadmin.  For one of our courses it is simply: <code>/mat111</code>.</p>

<p>From there you can navigate the directory structure in the Files pane, in the usual way.  To reset the Files pane view back to your Home directory, push the Ellipses button again and enter: <code>~</code>.</p>

<p>All of the foregoing will make sense to you once your have studied Unix-like directory structures.</p>

<h2 id="automated-assignment-collectionreturn">Automated Assignment Collection/Return</h2>

<h3 id="student-usernames">Student Usernames</h3>

<p>Once our elementary  students have acquired some proficiency with R, we introduce them to R Markdown and require them to turn in certain homework  and project assignments as R Markdown documents.  We write comments into a copy of the assignment and return it to the student.  One of the best arguments for teaching in the server environment is that this collection and return process can be automated.  Here’s how we do it these days.</p>

<p>First of all, each instructor should create a text file consisting of the network usernames of student in his or her course (or section thereof), one username per line, and name it something like <code>students.txt</code>.</p>

<p>Save the file in your Home directory on the server.</p>

<h3 id="encrypting-your-password">Encrypting Your Password</h3>

<p>You are going to create some sub-directories in Home directories of your students, so for this you will need to act as a superuser.  This action will in turn require you to provide your password to the computer.  For security reasons, you don’t want to send out the password every time you perform a superuser action, so you need to encrypt your password and provide a key in its place.  For this purpose our sysadmin has written the following Perl script:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="c1">#!/usr/bin/perl -w</span>
</span><span class="line">
</span><span class="line"><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="nn">Crypt::</span><span class="n">RC4</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$clearText</span><span class="p">,</span><span class="nv">$passwordFile</span><span class="p">,</span><span class="nv">$key</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--password=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$clearText</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">11</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--file=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$passwordFile</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">7</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--key=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$key</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">6</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$passwordFile</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$clearText</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$key</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line"><span class="k">print</span> <span class="s">&quot;\n USAGE: perl createpasswordfile.pl --password=&lt;domain password&gt; --key=&lt;password file key&gt; --file=&lt;secure password file&gt;\n\n&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">exit</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$encryptedPassword</span><span class="p">)</span> <span class="o">=</span> <span class="n">RC4</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span><span class="nv">$clearText</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$OUTPUTFILE</span><span class="p">);</span>
</span><span class="line"><span class="nb">open</span> <span class="p">(</span><span class="nv">$OUTPUTFILE</span><span class="p">,</span> <span class="s">&quot;&gt;$passwordFile&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Could not open $passwordFile\n&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">print</span> <span class="nv">$OUTPUTFILE</span> <span class="s">&quot;$encryptedPassword&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">close</span> <span class="p">(</span><span class="nv">$OUTPUTFILE</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nb">system</span><span class="p">(</span><span class="s">&quot;chmod 400 $passwordFile&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="s">&quot;\n\nPassword file $passwordFile written.\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The above script, and others to follow, are house in <code>/scripts</code>.  You will use it to create an encrypted version of your password that is stored in a new file in your Home directory.  To run the script, issue the following (suitably modified) command in R:</p>

<pre><code>system("perl /scripts/createpasswordfile.pl --password=&lt;YourPassword&gt; --key=&lt;YourChosenKey&gt; --file=&lt;/path/to/YourFavFileName.txt&gt;")
</code></pre>

<p>After you run the script, clear your R History:  you don’t want to leave your password hanging out in the open.</p>

<h3 id="create-subdirectories">Create Subdirectories</h3>

<p>Here is the Perl script that we currently use to create <code>submit</code> and <code>returned</code> directories in the Home directory of each student in the class.  Obviously your sysadmin will modify it to suit the file structure of your server.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="c1">#!/usr/bin/perl -w</span>
</span><span class="line">
</span><span class="line"><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">TRUE</span> <span class="o">=&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">FALSE</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="c1">#************************ PARAMETERS *********************************************************</span>
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$sourceRoot</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/home/FAST&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$group</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;admins&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$userDirective</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;FAST\\\\&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$permissions</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;770&quot;</span><span class="p">;</span>
</span><span class="line"><span class="c1">#*********************************************************************************************</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="c1">#collect commandline arguments</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">sub </span><span class="nf">showUsage</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="s">&quot;\nUSAGE: perl createdirectories.pl --studentfile=&lt;filename&gt; [--source=&lt;source path&gt; (Alternate source path) --email=&lt;email address&gt; (Email for submission report) --group=&lt;group name&gt; (Security Group) --permissions=&lt;nnn&gt; (Default Directory Permissions)]\n\n&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">exit</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$studentfile</span><span class="p">,</span><span class="nv">$sendEmail</span><span class="p">,</span><span class="nv">$summaryLine</span><span class="p">,</span><span class="nv">$recipientAddress</span><span class="p">);</span>
</span><span class="line"><span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--studentfile=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$studentfile</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--source=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                 <span class="nv">$sourceRoot</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">9</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--email=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">;</span>
</span><span class="line">                <span class="nv">$recipientAddress</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">8</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--group=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$group</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">8</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line"> 	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--permissions=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$permissions</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$studentfile</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line"><span class="o">&amp;</span><span class="n">showUsage</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="nv">$summaryLine</span> <span class="o">=</span> <span class="s">&quot;\nDirectory Permission Updates:\n--------------------------\n\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line"><span class="nb">open</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">,</span> <span class="s">&quot;&lt;$studentfile&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Could not open $studentfile\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">while</span> <span class="p">(</span><span class="sr">&lt;$INPUTFILE&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">	<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\cM\cJ|\cM|\cJ/\n/g</span><span class="p">;</span>  <span class="c1"># Re-format Windows files</span>
</span><span class="line">	<span class="k">my</span><span class="p">(</span><span class="nv">$inputLine</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class="line">        <span class="nb">chomp</span> <span class="p">(</span><span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">	<span class="k">unless</span> <span class="p">(</span><span class="nv">$inputLine</span> <span class="o">=~</span><span class="sr"> /^\s*$/</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">		<span class="k">my</span><span class="p">(</span><span class="nv">$submitPath</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$sourceRoot</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;/submit&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="k">my</span><span class="p">(</span><span class="nv">$returnPath</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$sourceRoot</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;/returned&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="k">my</span><span class="p">(</span><span class="nv">$mynotesPath</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$sourceRoot</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span><span class="s">&quot;/mynotes&quot;</span><span class="p">;</span>
</span><span class="line">	
</span><span class="line">		<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$submitPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">system</span> <span class="p">(</span><span class="s">&quot;mkdir $submitPath&quot;</span><span class="p">);</span> <span class="c1">#or die &quot;\nCould not create directory $submitPath.\n&quot;; </span>
</span><span class="line">			<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nCreated submit path $submitPath for user $inputLine.\n&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">			<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nSubmit path $submitPath for user $inputLine already exists.\n&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">	
</span><span class="line">		<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$returnPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">system</span> <span class="p">(</span><span class="s">&quot;mkdir $returnPath&quot;</span><span class="p">);</span>  <span class="c1">#or die &quot;\nCould not create directory $returnPath.\n&quot;; </span>
</span><span class="line">			<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nCreated return path $returnPath for user $inputLine.\n&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">			<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nReturn path $returnPath for user $inputLine already exists.\n&quot;</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">			
</span><span class="line"> 		<span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$mynotesPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                	<span class="nb">system</span> <span class="p">(</span><span class="s">&quot;mkdir $mynotesPath&quot;</span><span class="p">);</span>  <span class="c1">#or die &quot;\nCould not create directory $returnPath.\n&quot;;</span>
</span><span class="line">                	<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nCreated mynotes path $mynotesPath for user $inputLine.\n&quot;</span><span class="p">;</span>
</span><span class="line">        	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">                	<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nmynotes path $mynotesPath for user $inputLine already exists.\n&quot;</span><span class="p">;</span>
</span><span class="line">        	<span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">		<span class="k">my</span><span class="p">(</span><span class="nv">$securityToken</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$userDirective</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;:&quot;</span> <span class="o">.</span> <span class="nv">$group</span><span class="p">;</span>
</span><span class="line">	
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chown $securityToken $submitPath&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged ownership of submit path $submitPath to $securityToken.\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chown $securityToken $returnPath&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged ownership of return path $returnPath to $securityToken.\n&quot;</span><span class="p">;</span>
</span><span class="line"> 	
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chown $securityToken $mynotesPath&quot;</span><span class="p">);</span>
</span><span class="line">        	<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged ownership of mynotes path $mynotesPath to $securityToken.\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chmod $permissions $submitPath&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged permissions of submit path $submitPath to $permissions.\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chmod $permissions $returnPath&quot;</span><span class="p">);</span>
</span><span class="line"> 		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged permissions of return path $returnPath to $permissions.\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">		<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chmod $permissions $mynotesPath&quot;</span><span class="p">);</span>
</span><span class="line">        	<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\nChanged permissions of mynotes path $mynotesPath to $permissions.\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nb">close</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="nv">$sendEmail</span> <span class="o">==</span> <span class="n">TRUE</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="k">print</span> <span class="s">&quot;\nSending summary email to $recipientAddress.\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">my</span> <span class="p">(</span><span class="nv">$emailSubject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Subject: RStudio directories updated&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">my</span> <span class="p">(</span><span class="nv">$sendmailObject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/usr/sbin/sendmail -F RStudio_Grades\@georgetowncollege.edu -t&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">my</span> <span class="p">(</span><span class="nv">$replyAddress</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Reply-to: RStudio_Grades\@georgetowncollege.edu&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">my</span> <span class="p">(</span><span class="nv">$recipient</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;To: $recipientAddress&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="nb">open</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">,</span> <span class="s">&quot;|$sendmailObject&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Cannot open $sendmailObject: $!&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$emailSubject</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$recipient</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$replyAddress</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;Content-type: text/plain\n\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;.&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="nb">close</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>To run the script, issue the following R command, suitably modified:</p>

<pre><code>system("perl createdirectories.pl --studentfile=&lt;StudentFileName&gt;")
</code></pre>

<p>There are options to receive an email report confirming the creation of the directories, and to set permissions for them as well.  Currently we use the default settings.</p>

<h3 id="collect-assignments">Collect Assignments</h3>

<p>Students save an assignment into their <code>submit</code> directory, named according to some convention that you establish.  Specifics vary, but the name must end with an underscore followed by the student username.  For example:  <code>HW05_jdoe.Rmd</code> is the fifth homework assignment, submitted by the student with username <code>jdoe</code>.</p>

<p>The Perl script for collection of assignments is as follows:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="c1">#!/usr/bin/perl -w</span>
</span><span class="line">
</span><span class="line"><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="nn">File::</span><span class="n">Find</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">TRUE</span> <span class="o">=&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">FALSE</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="c1">#************************ PARAMETERS *********************************************************</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$sourceRoot</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/home/FAST&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">#*********************************************************************************************</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="c1">#collect commandline arguments</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">sub </span><span class="nf">showUsage</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="s">&quot;\nUSAGE: perl collecthomework.pl --instructor=&lt;name&gt; --assignment=&lt;name&gt; --studentfile=&lt;filename&gt; \n Optional Parameters:\n\n[--source=&lt;source path&gt; (Alternate source path)\n--destination=&lt;destination path&gt; (Alternate destination path)\n --remove (Remove homework files after copying them)\n --email=&lt;email address&gt; (Email for submission report)]\n\n&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">exit</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$instructor</span><span class="p">,</span><span class="nv">$assignment</span><span class="p">,</span><span class="nv">$studentfile</span><span class="p">,</span><span class="nv">$destinationRoot</span><span class="p">,</span><span class="nv">$sendEmail</span><span class="p">,</span><span class="nv">$recipientAddress</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--instructor=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="nv">$instructor</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">13</span><span class="p">);</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"> 	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--assignment=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$assignment</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">13</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--studentfile=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$studentfile</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line"> 	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--source=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		 <span class="nv">$sourceRoot</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">9</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--destination=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                 <span class="nv">$destinationRoot</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--email=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">;</span>
</span><span class="line">		<span class="nv">$recipientAddress</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">8</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$instructor</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$assignment</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$studentfile</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line"><span class="o">&amp;</span><span class="n">showUsage</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$destinationRoot</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="nv">$destinationRoot</span> <span class="o">=</span> <span class="s">&quot;/home/FAST/&quot;</span> <span class="o">.</span> <span class="nv">$instructor</span> <span class="o">.</span> <span class="s">&quot;/homework&quot;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$noSubmissionYet</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;\nThe following students have not submitted homework yet:\n------------------------------------------------------------&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$summaryLine</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;\nHomework assignments retrieved for assignment $assignment:\n-------------------------------------&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line"><span class="nb">open</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">,</span> <span class="s">&quot;&lt;$studentfile&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Could not open $studentfile\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">while</span> <span class="p">(</span><span class="sr">&lt;$INPUTFILE&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line"> 	<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\cM\cJ|\cM|\cJ/\n/g</span><span class="p">;</span>  <span class="c1"># Re-format Windows files</span>
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">$inputLine</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class="line">        <span class="nb">chomp</span> <span class="p">(</span><span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">unless</span> <span class="p">(</span><span class="nv">$inputLine</span> <span class="o">=~</span><span class="sr"> /^\s*$/</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">@searchFolders</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$sourceRoot</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;/submit&quot;</span><span class="p">);</span>
</span><span class="line">	<span class="k">my</span><span class="p">(</span><span class="nv">@foundProjects</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="n">find</span><span class="p">(</span> <span class="k">sub </span><span class="p">{</span> <span class="nb">push</span> <span class="nv">@foundProjects</span><span class="p">,</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="k">if</span> <span class="sr">/$assignment/i</span> <span class="p">},</span> <span class="nv">@searchFolders</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">	
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">$projectFile</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">foreach</span> <span class="nv">$projectFile</span><span class="p">(</span><span class="nv">@foundProjects</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">		<span class="k">print</span> <span class="s">&quot;\nFound $projectFile.&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">                <span class="k">my</span> <span class="p">(</span><span class="nv">$destinationFolder</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$destinationRoot</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$assignment</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span> <span class="o">.</span> <span class="nv">$inputLine</span><span class="p">;</span>
</span><span class="line">                <span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$destinationFolder</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                        <span class="nb">system</span> <span class="p">(</span><span class="s">&quot;mkdir -p $destinationFolder&quot;</span><span class="p">);</span>
</span><span class="line">                <span class="p">}</span>
</span><span class="line">
</span><span class="line">                <span class="nv">$destinationFolder</span> <span class="o">=</span> <span class="nv">$destinationFolder</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span><span class="p">;</span>
</span><span class="line">                <span class="nb">system</span> <span class="p">(</span><span class="s">&quot;cp -f $projectFile $destinationFolder&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\n $inputLine submitted file: $projectFile&quot;</span><span class="p">;</span>		
</span><span class="line">
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">@foundProjects</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		<span class="nv">$noSubmissionYet</span> <span class="o">=</span> <span class="nv">$noSubmissionYet</span> <span class="o">.</span> <span class="s">&quot;\n$inputLine&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nb">close</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\n\n&quot;</span> <span class="o">.</span> <span class="nv">$noSubmissionYet</span> <span class="o">.</span> <span class="s">&quot;\n\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="nv">$sendEmail</span> <span class="o">==</span> <span class="n">TRUE</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">print</span> <span class="s">&quot;\nSending summary email to $recipientAddress.\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$emailSubject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Subject: RStudio projects submitted for assignment $assignment&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$sendmailObject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/usr/sbin/sendmail -F RStudio_Grades\@georgetowncollege.edu -t&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$replyAddress</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Reply-to: RStudio_Grades\@georgetowncollege.edu&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$recipient</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;To: $recipientAddress&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="nb">open</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">,</span> <span class="s">&quot;|$sendmailObject&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Cannot open $sendmailObject: $!&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$emailSubject</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$recipient</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$replyAddress</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;Content-type: text/plain\n\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;.&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="nb">close</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>To run the script issue a command like the following:</p>

<pre><code>system("perl /scripts/collecthomework.pl --instructor=&lt;yourUsername&gt; --assignment=&lt;assignCode&gt; --studentfile=students.txt")
</code></pre>

<p>If you would like to receive an email with a list of all students from whom you got an assignment, run this instead:</p>

<pre><code>system("perl /scripts/collecthomework.pl --instructor=&lt;yourUsername&gt; --assignment=&lt;assignCode&gt; --studentfile=students.txt --email=&lt;yourEmailAddress&gt;")
</code></pre>

<p>You can run the collection script as often as you like:  it will pick up newly-submitted assignments but will not overwrite assignments collected from other students in a previous run.</p>

<h3 id="return-assignments">Return Assignments</h3>

<p>All of the assignments you collect appear in a <code>homework</code> folder in your Home directory, in sub-directories by assignment name and sub-sub-directories by student username.  Navigate to the assignments one by one.  For each assignment, open the R Markdown file and save it with an additional tag in the file name that will mark it out as the graded/commented copy to be returned to the student.  We use <code>_com</code> as our tag, creating files like this:  <code>HW05_jdoe_com.Rmd</code>.</p>

<p>For returning assignments, we have the following Perl script:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
<span class="line-number">166</span>
<span class="line-number">167</span>
<span class="line-number">168</span>
<span class="line-number">169</span>
<span class="line-number">170</span>
<span class="line-number">171</span>
<span class="line-number">172</span>
<span class="line-number">173</span>
<span class="line-number">174</span>
<span class="line-number">175</span>
<span class="line-number">176</span>
<span class="line-number">177</span>
<span class="line-number">178</span>
<span class="line-number">179</span>
<span class="line-number">180</span>
<span class="line-number">181</span>
<span class="line-number">182</span>
<span class="line-number">183</span>
<span class="line-number">184</span>
<span class="line-number">185</span>
<span class="line-number">186</span>
<span class="line-number">187</span>
<span class="line-number">188</span>
<span class="line-number">189</span>
<span class="line-number">190</span>
<span class="line-number">191</span>
<span class="line-number">192</span>
<span class="line-number">193</span>
<span class="line-number">194</span>
<span class="line-number">195</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="c1">#!/usr/bin/perl -w</span>
</span><span class="line">
</span><span class="line"><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="nn">File::</span><span class="n">Find</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="nn">Crypt::</span><span class="n">RC4</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">TRUE</span> <span class="o">=&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="k">use</span> <span class="n">constant</span> <span class="n">FALSE</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="c1">#************************ PARAMETERS *********************************************************</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$sourceRoot</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/home/FAST/&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$group</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;admins&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$userDirective</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;FAST\\\\&quot;</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$permissions</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;770&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="c1">#*********************************************************************************************</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="c1">#collect commandline arguments</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">sub </span><span class="nf">showUsage</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="s">&quot;\nUSAGE: perl returnhomework.pl --path=&lt;name&gt; --flag=&lt;name&gt; --studentfile=&lt;filename&gt; \n Optional Parameters:\n\n[--email=&lt;email address&gt; (Email for submission report) --key=&lt;password file key&gt; --passwordfile=&lt;password file&gt;]\n\n&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">exit</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span><span class="nv">$flag</span><span class="p">,</span><span class="nv">$studentfile</span><span class="p">,</span><span class="nv">$destinationRoot</span><span class="p">,</span><span class="nv">$sendEmail</span><span class="p">,</span><span class="nv">$recipientAddress</span><span class="p">,</span><span class="nv">$key</span><span class="p">,</span><span class="nv">$passwordFile</span><span class="p">,</span><span class="nv">$decryptedPassword</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">   <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--flag=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$flag</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">7</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--studentfile=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$studentfile</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line"> 	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--path=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">		 <span class="nv">$path</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">7</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--destination=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                 <span class="nv">$destinationRoot</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">14</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--email=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$sendEmail</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">;</span>
</span><span class="line">		<span class="nv">$recipientAddress</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">8</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--key=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$key</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">6</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">	<span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span> <span class="sr">m/--passwordfile=/i</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                <span class="nv">$passwordFile</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$item</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$item</span><span class="p">)</span><span class="o">-</span><span class="mi">15</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="nv">$passwordFile</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">	<span class="k">my</span><span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line">	<span class="nb">open</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">,</span> <span class="s">&quot;&lt;$passwordFile&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Could not open $passwordFile\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">	<span class="k">while</span> <span class="p">(</span><span class="sr">&lt;$INPUTFILE&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        	<span class="k">my</span><span class="p">(</span><span class="nv">$inputLine</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class="line">        	<span class="nb">chomp</span> <span class="p">(</span><span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">		<span class="nv">$decryptedPassword</span> <span class="o">=</span> <span class="n">RC4</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span><span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$path</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$flag</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$studentfile</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line"><span class="o">&amp;</span><span class="n">showUsage</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">unless</span> <span class="p">(</span> <span class="nv">$path</span> <span class="o">=~</span> <span class="n">s</span><span class="o">|</span><span class="sr">/\s*$|/</span><span class="o">|</span> <span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nv">$path</span> <span class="o">=</span> <span class="nv">$path</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$destinationRoot</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="nv">$destinationRoot</span> <span class="o">=</span> <span class="s">&quot;/home/FAST/&quot;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$summaryLine</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;\nHomework graded in folder $path:\n-------------------------------------&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">my</span><span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line"><span class="nb">open</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">,</span> <span class="s">&quot;&lt;$studentfile&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Could not open $studentfile\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">while</span> <span class="p">(</span><span class="sr">&lt;$INPUTFILE&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line"> 	<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\cM\cJ|\cM|\cJ/\n/g</span><span class="p">;</span>  <span class="c1"># Re-format Windows files</span>
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">$inputLine</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class="line">        <span class="nb">chomp</span> <span class="p">(</span><span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">unless</span> <span class="p">(</span><span class="nv">$inputLine</span> <span class="o">=~</span><span class="sr"> /^\s*$/</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">@searchFolders</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$path</span> <span class="o">.</span>  <span class="nv">$inputLine</span><span class="p">);</span>
</span><span class="line">	<span class="k">my</span><span class="p">(</span><span class="nv">@foundProjects</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="n">find</span><span class="p">(</span> <span class="k">sub </span><span class="p">{</span> <span class="nb">push</span> <span class="nv">@foundProjects</span><span class="p">,</span> <span class="nv">$</span><span class="nn">File::Find::</span><span class="nv">name</span> <span class="k">if</span> <span class="sr">/$flag/i</span> <span class="p">},</span> <span class="nv">@searchFolders</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">	
</span><span class="line">        <span class="k">my</span><span class="p">(</span><span class="nv">$projectFile</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">foreach</span> <span class="nv">$projectFile</span><span class="p">(</span><span class="nv">@foundProjects</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">		<span class="k">print</span> <span class="s">&quot;\nFound $projectFile.&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">                <span class="k">my</span> <span class="p">(</span><span class="nv">$destinationFolder</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$destinationRoot</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;/returned&quot;</span><span class="p">;</span>
</span><span class="line">                <span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="nv">$destinationFolder</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                        <span class="nb">system</span> <span class="p">(</span><span class="s">&quot;mkdir -p $destinationFolder&quot;</span><span class="p">);</span>
</span><span class="line">                <span class="p">}</span>
</span><span class="line">
</span><span class="line">                <span class="nv">$destinationFolder</span> <span class="o">=</span> <span class="nv">$destinationFolder</span> <span class="o">.</span> <span class="s">&quot;/&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"> 		<span class="k">my</span><span class="p">(</span><span class="nv">$securityToken</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$userDirective</span> <span class="o">.</span> <span class="nv">$inputLine</span> <span class="o">.</span> <span class="s">&quot;:&quot;</span> <span class="o">.</span> <span class="nv">$group</span><span class="p">;</span>
</span><span class="line">        	
</span><span class="line">                <span class="nb">system</span> <span class="p">(</span><span class="s">&quot;cp -f $projectFile $destinationFolder&quot;</span><span class="p">);</span>
</span><span class="line">		
</span><span class="line">		<span class="k">my</span><span class="p">(</span><span class="nv">$folderWildcard</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$destinationFolder</span> <span class="o">.</span> <span class="s">&quot;*&quot;</span><span class="p">;</span>
</span><span class="line">	
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="p">(</span><span class="nv">$passwordFile</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                	<span class="nb">system</span><span class="p">(</span><span class="s">&quot;echo $decryptedPassword | sudo chown $securityToken $folderWildcard&quot;</span><span class="p">);</span>
</span><span class="line">                	<span class="nb">system</span> <span class="p">(</span><span class="s">&quot;echo $decryptedPassword | sudo chmod 770 $folderWildcard&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">			<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chown $securityToken $folderWildcard&quot;</span><span class="p">);</span>
</span><span class="line">                	<span class="nb">system</span><span class="p">(</span><span class="s">&quot;chmod 770 $folderWildcard&quot;</span><span class="p">);</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">		
</span><span class="line">		<span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\n $inputLine returned $projectFile to $destinationFolder\n&quot;</span><span class="p">;</span>		
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">	<span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nb">close</span> <span class="p">(</span><span class="nv">$INPUTFILE</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nv">$summaryLine</span> <span class="o">=</span> <span class="nv">$summaryLine</span> <span class="o">.</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="nv">$sendEmail</span> <span class="o">==</span> <span class="n">TRUE</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="k">print</span> <span class="s">&quot;\nSending summary email to $recipientAddress.\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$emailSubject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Subject: RStudio projects graded and returned.&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$sendmailObject</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;/usr/sbin/sendmail -F RStudio_Grades\@georgetowncollege.edu -t&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$replyAddress</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Reply-to: RStudio_Grades\@georgetowncollege.edu&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">my</span> <span class="p">(</span><span class="nv">$recipient</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;To: $recipientAddress&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="nb">open</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">,</span> <span class="s">&quot;|$sendmailObject&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Cannot open $sendmailObject: $!&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$emailSubject</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$recipient</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$replyAddress</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;Content-type: text/plain\n\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="nv">$summaryLine</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="k">print</span> <span class="n">SENDMAIL</span> <span class="s">&quot;.&quot;</span><span class="p">;</span>
</span><span class="line">	<span class="nb">close</span> <span class="p">(</span><span class="n">SENDMAIL</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>To run the script, you need the key for your encrypted password.  Run a command like the following:</p>

<pre><code>system("perl /scripts/returnhomework.pl --path=/path/to/yourUsername/homework/HW05/ --flag=_com --studentfile=/usr/local/sbin/YourUsername-YourCourse.txt --key=YourChosenKey --passwordfile=password_file_YourUsername.txt")
</code></pre>

<p>Note that the sysadmin has established, for each instructor, a file in <code>/usr/local/sbin</code> of student usernames for the instructor’s course.  As students drop your course and you edit your local student file accordingly, the two files may fall out of sync, but the return script will still work correctly for students still enrolled in the course.</p>

<h2 id="bumps-on-the-road">Bumps on the Road</h2>

<p>All in all, the server environment has proven to be quite useful for our courses.  Nevertheless, there are a few complications and potential problems to keep in mind.</p>

<ul>
  <li>Students can read from the Common Source, directory, but cannot write to it.  If a student wishes to perform an “knitting” type of action to a file in the Common Source directory—e.g., knitting an R Markdown to HTML or previewing an R Presentation document—then she must save a copy into her Home directory and perform the knitting operations upon it.  The same often goes for other instructors (default file permissions are still a bit unclear to us).</li>
  <li><a href="https://www.rstudio.com/shiny/">Shiny apps</a> are wonderful.  We put them into the <a href="https://github.com/homerhanumat/tigerstats">ancillary package</a> that we use for our own elementary course, so that R users can run them locally once the package is installed, or run them locally after downloading them from the package’s Git Hub repository.  However, at many institutions the firewalls don’t permit execution of the Shiny scripts.  If this is the case at your own institution and you want your students to work with Shiny apps, then you must either install and configure the Shiny server or deploy the apps yourself on a site hosted by RStudio, e.g., <a href="http://shinyapps.io/">http://shinyapps.io/</a>.  We have experimented with both venues and are pleased with the results.</li>
  <li>A small percentage of users eventually experience mysterious problems—e.g., loss of ability to knit an R markdown document more than once in a single server session—that we have not been able to diagnose and resolve completely.  If the problem becomes sufficiently severe, a student could always use the desktop version, but this in itself creates a course management problem.  Larger institutions than ours may wish to consider paying for the Enterprise version of the RStudio server, and the support that accompanies it.</li>
</ul>

<h2 id="props-to-the-sysadmin">Props to the Sysadmin</h2>

<p>We are grateful for the work of Scott Switzer, who serves as Server System Manager in the Office of Information Technology Services at Georgetown College.  Scott manages the RStudio server and the College’s Shiny server, created the Perl scripts in this post, helped establish other website support for our elementary statistics course, and at an early stage played the role of informal command-line guru to the the author of this post.  If you have the good fortune to work with a such a sysadmin your own institution, make sure that she gets lots of love and special ice cream!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qnorm() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/04/28/qnormtutorial/"/>
    <updated>2014-04-28T22:00:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/04/28/qnormtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#comparison-of-qnorm-with-pnorm">Comparison of <code>qnorm()</code> with <code>pnorm()</code></a></li>
  <li><a href="#a-few-more-examples">A Few More Examples</a>    <ul>
      <li><a href="#making-the-top-ten-percent-an-area-above">Making the Top Ten Percent (An Area Above)</a></li>
      <li><a href="#an-area-between">An Area Between</a></li>
    </ul>
  </li>
</ul>

<h2 id="comparison-of-qnorm-with-pnorm">Comparison of <code>qnorm()</code> with <code>pnorm()</code></h2>

<p>Thew function <code>prnorm()</code> in regular <code>R</code>, as well as the function <code>pnormGC() in the </code>tigerstats` package, compute probabilities from known bounding values.  For example, suppose that $X$ is a normally distributed random variable with mean 70 and standard deviation 3, and that you want to know:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 72). %]]&gt;</script>

<p>Then you <em>know</em> the boundary value 72, but you don’t know the probability:  the area under the normal density curve before 72.  Functions like <code>pnormGC()</code> aim to give you that area–that probability:</p>

<pre><code>require(tigerstats)

 

pnormGC(72, region="below", mean=70,
        sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/qnormtut72.png" alt="plot of chunk qnormtut72" /> </p>

<pre><code>## [1] 0.7475
</code></pre>

<p>The function <code>qnorm()</code>, which comes standard with R, aims to do the opposite:  given an area, find the boundary value that determines this area.</p>

<p>For example, suppose you want to find that 85th percentile of a normal distribution whose mean is 70 and whose standard deviation is 3.  Then you ask for:</p>

<pre><code>qnorm(0.85,mean=70,sd=3)

## [1] 73.11
</code></pre>

<p>The value 73.1093 is indeed the 85th percentile, in the sense that 85% of the values in a population that is normally distributed with mean 70 and standard deviation 3 will lie below 73.1093.  In other words, if you were to pick a random member $X$ from such a population, then</p>

<p><script type="math/tex">% &lt;![CDATA[
P(X < 73.1093) = 0.85 %]]&gt;</script>.</p>

<p>You can check that this is correct by plugging 73.1093 into <code>pnormGC()</code>:</p>

<pre><code>pnormGC(73.1093,region="below",mean=70,
        sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/qnormtut73.png" alt="plot of chunk qnormtut73" /> </p>

<pre><code>## [1] 0.85
</code></pre>

<p>Sure enough, the area under the curve before 73.1093 is 0.85.</p>

<h2 id="a-few-more-examples">A Few More Examples</h2>

<h3 id="making-the-top-ten-percent-an-area-above">Making the Top Ten Percent (An Area Above)</h3>

<blockquote>
  <p>Suppose that SAT scores are normally distributed, and that the mean SAT score is 1000, and the standard deviation of all SAT scores is 100.  <em>How high must you score so that only 10% of the population scores higher than you?</em></p>
</blockquote>

<p>Here’s the solution.  If 10% score higher than you, then 90% score lower.  So just call <code>qnorm()</code> with 0.90 as the boundary value:</p>

<pre><code>qnorm(0.90,mean=1000,sd=100)

## [1] 1128
</code></pre>

<p>In other words, the 90th percentile of SAT scores is around 1128.</p>

<p><strong>Note</strong>:  <code>qnorm()</code> deals by default with areas <em>below</em> the given boundary value.  If we had asked for:</p>

<pre><code>qnorm(0.10,mean=1000,sd=100)
</code></pre>

<p>then we would have got only the 10th percentile of the SAT scores, not the desired 90th percentile.  If you would like to input 0.10 directly, then you can do so provided that you fiddle with the <code>lower.tail</code> argument:</p>

<pre><code>qnorm(0.10,mean=1000,sd=100,
      lower.tail=FALSE)

## [1] 1128
</code></pre>

<p>But really it seems easier just to do the math:</p>

<p>$1 - 0.10 = 0.90.$</p>

<h3 id="an-area-between">An Area Between</h3>

<blockquote>
  <p>Find a positive number $z$ so that the area under the standard normal curve between $-z$ and $z$ is 0.95.</p>
</blockquote>

<p>Here’s the solution.  If 95% of the area lies between $-z$ and $z$, then 5% of the area must lie outside of this range.  since normal curves are symmetric, half of this amount–2.5%–must lie before $-z$.  Then the area under the curve before $z$ must be:</p>

<script type="math/tex; mode=display">0.025+0.95=0.975.</script>

<p>Hence the number $z$ is actually the 97.5th percentile of the standard normal distribution, and we can find it as follows:</p>

<pre><code>qnorm(0.975,mean=0,sd=1)

## [1] 1.96
</code></pre>

<p>So $z$ is about 1.96.  We can check this result graphically as follows:</p>

<pre><code>pnormGC(c(-1.96,1.96),region="between",mean=0,
        sd=1,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/qnormtutbetween.png" alt="plot of chunk qnormtutbetween" /> </p>

<pre><code>## [1] 0.95
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Roctopress: Configure Your Octopress Blog for R]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/04/13/roctopress/"/>
    <updated>2014-04-13T16:00:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/04/13/roctopress</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#directory-house-keeping">Directory House-Keeping</a></li>
  <li><a href="#from-r-markdown-to-markdown">From R Markdown to Markdown</a></li>
  <li><a href="#from-r-markdown-to-html">From R Markdown to HTML</a></li>
  <li><a href="#considerations-of-style">Considerations of Style</a></li>
  <li><a href="#producing-a-post">Producing a Post</a></li>
  <li><a href="#creating-a-topics-feed">Creating a Topics Feed</a></li>
  <li><a href="#archive-old-r-markdowns">Archive Old R Markdowns</a></li>
  <li><a href="#lingering-problems">Lingering Problems</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>This post records how I configured <a href="http://octopress.org/">Octopress</a> for blogging about <a href="http://www.r-project.org/">R</a>, my favorite statistical programming environment.  It is intended for colleagues and students who would like to begin blogging in a similar vein.  I will assume that you have got Octopress up and running, and that you have chosen to have it hosted by <a href="https://pages.github.com/">GitHub Pages</a>.</p>

<p>I claim little in the way of originality:  most of this post consists of tips I picked up from knowledgeable people on the web.</p>

<h2 id="directory-house-keeping">Directory House-Keeping</h2>

<p>Create the following directories in the Octopress directory:</p>

<ul>
  <li><code>Rmd_sources</code> (your posts will start here)</li>
  <li><code>Rmd_sources_old</code> (to archive old posts source files)</li>
  <li><code>source/images/figure</code> (your R graphs will be placed here)</li>
  <li><code>source/images/cache</code> (if you cache the results of an expensive computation, the results go here)</li>
</ul>

<h2 id="from-r-markdown-to-markdown">From R Markdown to Markdown</h2>

<p>We will adopt the approach of <a href="http://jason.bryer.org/posts/2012-12-10/Markdown_Jekyll_R_for_Blogging.html">Jason Breyer</a>.</p>

<p>In your Octopress directory, place the Jason’s R Script (perhaps call it <code>rmarkdown.r</code>):</p>

<pre><code>#' This R script will process all R mardown files (those with in_ext file extention,
#' .rmd by default) in the current working directory. Files with a status of
#' 'processed' will be converted to markdown (with out_ext file extention, '.markdown'
#' by default). It will change the published parameter to 'true' and change the
#' status parameter to 'publish'.
#'
#' @param dir the directory to process R Markdown files.
#' @param images.dir the base directory where images will be generated.
#' @param images.url
#' @param out_ext the file extention to use for processed files.
#' @param in_ext the file extention of input files to process.
#' @param recursive should rmd files in subdirectories be processed.
#' @return nothing.
#' @author Jason Bryer &lt;jason@bryer.org&gt;
convertRMarkdown &lt;- function(dir=getwd(), images.dir=dir, 
                             images.url='/images/',
                             out_ext='.markdown', in_ext='.rmd', recursive=FALSE) {
        require(knitr, quietly=TRUE, warn.conflicts=FALSE)
        files &lt;- list.files(path=dir, pattern=in_ext, ignore.case=TRUE, recursive=recursive)
        for(f in files) {
                message(paste("Processing ", f, sep=''))
                content &lt;- readLines(f)
                frontMatter &lt;- which(substr(content, 1, 3) == '---')
                if(length(frontMatter) &gt;= 2 &amp; 1 %in% frontMatter) {
                        statusLine &lt;- which(substr(content, 1, 7) == 'status:')
                        publishedLine &lt;- which(substr(content, 1, 10) == 'published:')
                        if(statusLine &gt; frontMatter[1] &amp; statusLine &lt; frontMatter[2]) {
                                status &lt;- unlist(strsplit(content[statusLine], ':'))[2]
                                status &lt;- sub('[[:space:]]+$', '', status)
                                status &lt;- sub('^[[:space:]]+', '', status)
                                if(tolower(status) == 'process') {
                                        #This is a bit of a hack but if a line has zero length (i.e. a
                                        #black line), it will be removed in the resulting markdown file.
                                        #This will ensure that all line returns are retained.
                                        content[nchar(content) == 0] &lt;- ' '
                                        message(paste('Processing ', f, sep=''))
                                        content[statusLine] &lt;- 'status: publish'
                                        content[publishedLine] &lt;- 'published: true'
                                        outFile &lt;- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
                                        render_markdown(strict=TRUE)
                                        opts_knit$set(out.format='markdown')
                                        opts_knit$set(fig.path="images/")
                                        opts_knit$set(base.dir=images.dir)
                                        opts_knit$set(base.url=images.url)
                                        opts_knit$set(fig.width=3.5,fig.height=3,tidy=FALSE)
                                        try(knit(text=content, output=outFile), silent=FALSE)
                                } else {
                                        warning(paste("Not processing ", f, ", status is '", status,
                                                                 "'. Set status to 'process' to convert.", sep=''))
                                }
                        } else {
                                warning("Status not found in front matter.")
                        }
                } else {
                        warning("No front matter found. Will not process this file.")
                }
        }
        invisible()
}
</code></pre>

<h2 id="from-r-markdown-to-html">From R Markdown to HTML</h2>

<p>Octopress ships with  <code>rdiscount</code> as the converter from markdown to HTML, but to handle math you want another converter.  I played around with <code>pandoc</code> for a while, but eventually decided on <code>kramdown</code>.</p>

<p>Octopress may be “locked” to a specific older version of <code>kramdown</code>, so install that version:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem install kramdown -v 0.13.8</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now modify your Gemfile to include <code>kramdown</code>.  For example, my Gemfile now looks like:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class=""><span class="line">source "https://rubygems.org"
</span><span class="line"> 
</span><span class="line">group :development do
</span><span class="line">  gem 'rake', '~&gt; 0.9'
</span><span class="line">  gem 'jekyll', '~&gt; 0.12'
</span><span class="line">  gem 'kramdown', '~&gt; 0.13.8'
</span><span class="line">  gem 'rdiscount', '~&gt; 2.0.7'
</span><span class="line">  gem 'pygments.rb', '~&gt; 0.3.4'
</span><span class="line">  gem 'RedCloth', '~&gt; 4.2.9'
</span><span class="line">  gem 'haml', '~&gt; 3.1.7'
</span><span class="line">  gem 'compass', '~&gt; 0.12.2'
</span><span class="line">  gem 'sass', '~&gt; 3.2'
</span><span class="line">  gem 'sass-globbing', '~&gt; 1.0.0'
</span><span class="line">  gem 'rubypants', '~&gt; 0.2.0'
</span><span class="line">  gem 'rb-fsevent', '~&gt; 0.9'
</span><span class="line">  gem 'stringex', '~&gt; 1.4.0'
</span><span class="line">  gem 'liquid', '~&gt; 2.3.0'
</span><span class="line">  gem 'directory_watcher', '1.4.1'
</span><span class="line">end
</span><span class="line"> 
</span><span class="line">gem 'sinatra', '~&gt; 1.4.2'</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Also, edit your <code>_config.yml</code> file:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gems: [ 'kramdown' ]
</span><span class="line">markdown: kramdown</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>To get MathJax to work, my source is <a href="http://blog.zhengdong.me/2012/12/19/latex-math-in-octopress">Zheng Dong</a>,</p>

<p>Open <code>source/_includes/custom/head.html</code> and add the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;!-- MathJax --&gt;
</span><span class="line">&lt;script type="text/x-mathjax-config"&gt;
</span><span class="line">  MathJax.Hub.Config({
</span><span class="line">    tex2jax: {
</span><span class="line">      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
</span><span class="line">      processEscapes: true
</span><span class="line">    }
</span><span class="line">  });
</span><span class="line">&lt;/script&gt;
</span><span class="line"> 
</span><span class="line">&lt;script type="text/x-mathjax-config"&gt;
</span><span class="line">    MathJax.Hub.Config({
</span><span class="line">      tex2jax: {
</span><span class="line">        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
</span><span class="line">      }
</span><span class="line">    });
</span><span class="line">&lt;/script&gt;
</span><span class="line"> 
</span><span class="line">&lt;script type="text/x-mathjax-config"&gt;
</span><span class="line">    MathJax.Hub.Queue(function() {
</span><span class="line">        var all = MathJax.Hub.getAllJax(), i;
</span><span class="line">        for(i=0; i &lt; all.length; i += 1) {
</span><span class="line">            all[i].SourceElement().parentNode.className += ' has-jax';
</span><span class="line">        }
</span><span class="line">    });
</span><span class="line">&lt;/script&gt;
</span><span class="line"> 
</span><span class="line">&lt;script type="text/javascript"
</span><span class="line">   src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
</span><span class="line">&lt;/script&gt;
</span><span class="line"> </span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="considerations-of-style">Considerations of Style</h2>

<p>Open <code>octopress/sass/custom/_styles.css</code> and add:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#markdown-toc:before {
</span><span class="line">  content: "In this Post";
</span><span class="line">  font-weight: bold;
</span><span class="line">}
</span><span class="line">ul#markdown-toc {
</span><span class="line">  list-style: none;
</span><span class="line">  float: right;
</span><span class="line">  @include shadow-box;
</span><span class="line">  background-color: white;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line"> 
</span><span class="line"> 
</span><span class="line">caption {
</span><span class="line">  font-weight:  bolder;
</span><span class="line">  text-align:  center;
</span><span class="line">  margin-bottom:  20px; 
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">figcaption {
</span><span class="line">  font-weight:  bolder;
</span><span class="line">  text-align:  center;
</span><span class="line">  margin-bottom:  30px; 
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">p img {
</span><span class="line">  display: block;
</span><span class="line">  margin-left: auto;
</span><span class="line">  margin-right: auto;
</span><span class="line">  margin-bottom: 10px;
</span><span class="line">  border-style:  ridge;
</span><span class="line">  border-color:  teal;
</span><span class="line">  border-width:  thick;
</span><span class="line">  padding:  5px 5px 5px 5px;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">table, th, td
</span><span class="line">{
</span><span class="line">border: 1px solid black;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">td
</span><span class="line">{
</span><span class="line">padding:15px;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">table, td, th
</span><span class="line">{
</span><span class="line">border:1px solid green;
</span><span class="line">}
</span><span class="line">th
</span><span class="line">{
</span><span class="line">background-color: rgb(147,161,161);
</span><span class="line">color:white;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">table {
</span><span class="line">    margin-left:auto; 
</span><span class="line">    margin-right:auto;
</span><span class="line">    margin-bottom:  30px;
</span><span class="line">  }
</span><span class="line">  
</span><span class="line"> 
</span><span class="line">dt {
</span><span class="line">  display:  block;
</span><span class="line">  font-weight:  bolder;
</span><span class="line">  margin-bottom:  15px;
</span><span class="line">  
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">dd {
</span><span class="line">  display:  block;
</span><span class="line">  border-style:  double;
</span><span class="line">  border-color:  blue;
</span><span class="line">  border-width:  medium;
</span><span class="line">  padding:  5px 5px 5px 5px;
</span><span class="line">  margin-bottom:  15px;
</span><span class="line">}
</span><span class="line"> 
</span><span class="line">dl {
</span><span class="line">  margin-bottom:  30px;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Drawback:  your blog will look exactly like my blog.</p>

<p>Notes:</p>

<ul>
  <li>the table of contents styling was from <a href="http://blog.riemann.cc/2013/04/10/table-of-contents-in-octopress/">Robert Riemann</a>.</li>
  <li>CSS for <code>caption</code> and <code>figcaption</code> are left over from earlier experiments with <code>pandoc</code>, but I’m retaining them in case they come in handy later.</li>
</ul>

<h2 id="producing-a-post">Producing a Post</h2>

<p>Create a new .Rmd document, and put it in <code>Rmd_sources</code>.  At the top, make sure you have stuff like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">---
</span><span class="line">layout: post
</span><span class="line">title: "Your Title Here in Quotes"
</span><span class="line">date: 2014-04-17 01:00:00
</span><span class="line">comments: true
</span><span class="line">categories: [YourCategoryName]
</span><span class="line">published: true
</span><span class="line">status: publish
</span><span class="line">---</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If you want the table of contents that <code>kramdown</code> provides, then add the following a couple of lines on down:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">* will be replaced by TOC
</span><span class="line">{:toc}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It’s a good idea to set some chunk options (use <code>include-FALSE</code>):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">opts_chunk$set(tidy=FALSE,fig.width=4.5,fig.height=3.5)</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>All images from all posts end up in the same directory, so when a code chunk results in a graphic give that chunk a unique name (different from all other graph chunks that you will ever produce with this blog).</p>

<p>When you are ready to process run:</p>

<pre><code>source("~/octopress/rmarkdown.r")
</code></pre>

<p>(This assumes your working directory is your home directory, and that <code>octopress</code> is directly under your home.  Modify the path name if this is not the case.)</p>

<p>Then change working directory to <code>Rmd_sources</code> and run:</p>

<pre><code>convertRMarkdown()
system("cp figure/* ../source/images/figure")
</code></pre>

<p>If you created any cache make sure you named the chunks uniquely.  Also you need to run:</p>

<pre><code>system("cp cache/* ../source/images/cache")
</code></pre>

<p>Finally, get the markdown file into the <code>source/_posts</code> directory:</p>

<pre><code>system("cp 2014-04-01-HowToSurviveZombieArmageddonUsingR.markdown ../source/_posts")
</code></pre>

<p>Then the usual:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake generate
</span><span class="line">rake preview</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>until it looks good, then</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake deploy</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then commit your changes and push to Git Hub repository:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git add --all
</span><span class="line">git commit -m "add Zombie Armageddon Survival Guide"
</span><span class="line">git push origin source</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="creating-a-topics-feed">Creating a Topics Feed</h2>

<p>Say you produce something you think merits wider distribution, and want to pass it on to a great site like <a href="http://www.r-bloggers.com/">R-bloggers</a>:  then you need to create a category feed.  Here’s some help I got from <a href="http://hairysun.com/blog/2011/11/09/creating-category-feeds-in-octopress/">Matt Harrison</a>.</p>

<p>Create the file the <code>source/YourCategoryName.xml</code> (make sure to modify occurrences of “YourCategoryName” in what follows to whatever you please):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class=""><span class="line">---
</span><span class="line">layout: nil
</span><span class="line">---
</span><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class="line">&lt;feed xmlns="http://www.w3.org/2005/Atom"&gt;
</span><span class="line"> 
</span><span class="line">  &lt;title&gt;A Statistics Blog - YourCategoryName&lt;/title&gt;
</span><span class="line">  &lt;link href="http://statistics.rainandrhino.org/atom.xml" rel="self"/&gt;
</span><span class="line">  &lt;link href="http://statistics.rainandrhino.org/"/&gt;
</span><span class="line">  &lt;updated&gt;2014-09-15T16:56:05-04:00&lt;/updated&gt;
</span><span class="line">  &lt;id&gt;http://statistics.rainandrhino.org/&lt;/id&gt;
</span><span class="line">  &lt;author&gt;
</span><span class="line">    &lt;name&gt;Homer White&lt;/name&gt;
</span><span class="line">    
</span><span class="line">  &lt;/author&gt;
</span><span class="line">  &lt;generator uri="http://octopress.org/"&gt;Octopress&lt;/generator&gt;
</span><span class="line"> 
</span><span class="line">  
</span><span class="line">&lt;/feed&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="archive-old-r-markdowns">Archive Old R Markdowns</h2>

<p>Once you are done publishing a post, move the R Markdown source into the <code>Rmd_sources_old</code> directory, so the <code>ConvertRMarkdown()</code> function won’t keep processing them needlessly.</p>

<h2 id="lingering-problems">Lingering Problems</h2>

<ul>
  <li><code>kramdown</code> differs from <code>knitr</code> in how it recognizes math.  If you see odd results, consult the <code>kramdown</code> documentation on the web to learn how to really really do it right.  If you want to keep on the R Markdown way, then from time to time you may have to escape certain special characters.</li>
  <li>R-bloggers takes your stuff from a blog feed.  It does not recognize MathJax, so your math won’t render.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Five Reasons to Teach Elementary Statistics With R: #2]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/04/08/reasons-to-teach-with-R-2/"/>
    <updated>2014-04-08T19:59:59-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/04/08/reasons-to-teach-with-R-2</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#reason-2--rstudios-manipulate">Reason #2:  RStudio’s <code>manipulate</code></a>    <ul>
      <li><a href="#do-it-yourself">Do It Yourself</a></li>
      <li><a href="#next-time">Next Time</a></li>
    </ul>
  </li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>This is is second in a projected five-part series of posts aimed at colleagues who teach elementary statistics.  If you teach with R but hesitate to spring such a powerful and complex tool on unsuspecting introductory students—many of whom whom will have had no prior experience with the command line, much less with coding—then I hope these posts will give you some encouragement.</p>

<p>The <a href="http://statistics.rainandrhino.org/blog/2014/04/05/tigerstatsintro/">first post</a> in this series introduced package <code>mosaic</code>, and promised to review a supplementary package that I and a colleague put together for our own students, but I’ve decided put that off a bit and focus instead on another powerful new tool for statistics instruction:  the well-known <a href="https://www.rstudio.com/">RStudio</a> Integrated Development Environment for R, and its <code>manipulate</code> package in particular.</p>

<h2 id="reason-2--rstudios-manipulate">Reason #2:  RStudio’s <code>manipulate</code></h2>

<p>You might think that an IDE is strictly for programmers.  The authors of <code>mosaic</code>, though, looked at RStudio and saw an environment ripe for customization to fit the elementary classroom.  RStudio offers many benefits in this regard, but for this post I’ll concentrate on just one:  its pre-installed package <code>manipulate</code>.</p>

<p>The RStudio developers may have written <code>manipulate</code> simply as a prototype for <a href="http://shiny.rstudio.com/">Shiny</a>, but it happens to be a fabulous tool for authoring instructional applets.  To be sure, there are many great instructional apps out on the web—visual stunners put together by authentic web developers—but the everyday statistics instructor may find that <code>manipulate</code> empowers her to quickly work up small instructional apps that address needs specific to her own students.</p>

<p>At my College, for example, we believe that simulation is important to understanding probability concepts, but we also find that our students don’t easily grasp the import of a simulation when the computers simply generates, say, 3000 re-samples and summarizes the results, <em>all in flash</em>.  We feel the need for plenty of “one at a time” simulation experiences that serve as transitions to the analysis of large-scale simulation results, and we don’t always find apps on the web that cater to our needs in just the way we would like.</p>

<p>Suppose you want students to understand coverage properties of confidence intervals—i.e., what we really mean when we say that we are “95%-confident” that the interval covers the population parameter–in a ground-up way.  Then you might do as my colleague Rebekah Robinson did, and write a manipulate app like <code>CIMean()</code>.</p>

<p>To get the app, install package <code>tigerstats</code> from CRAN, or for the very latest version try:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<p>Next, get into RStudio (if you are not there already), and run:</p>

<pre><code>require(tigerstats)
require(manipulate)
CIMean(~height,data=imagpop)
</code></pre>

<p>The app loads in the (roughly normally distributed) heights of an imaginary population of 10,000 people.  Sliders allow the user to select a sample size and a desired confidence level.  Click on one of the sliders and you’ll get just one sample from the population, with a histogram of the sample overlaying the density curve for the population, and a confidence interval displayed clearly along the horizontal axis.  The user can easily see whether the interval contains the population mean (marked by the red vertical line).  Output to the console also keeps the user apprised of what has just happened.  When the user has clicked enough to get the idea, he/she can ask for a lot of samples at once, verifying that when assumptions are met 95%-confidence intervals do indeed cover their target parameter about 95% of the time.</p>

<p>One advantage of <code>manipulate</code> apps over the visually spectacular ones you find on the web is that you can easily write them to accept arbitrary input.  <code>CIMean()</code>, for example, will deal with any numerical variable from any data frame on R’s search path,including the quite right-skewed variable <strong>income</strong> from<code>imagpop</code>:</p>

<pre><code>CIMean(~income,data=imagpop)
</code></pre>

<p>The user realizes quickly that the standard t-intervals applied to small samples from skewed populations do not possess the advertised coverage properties.</p>

<p>Once you get into the spirit of <code>manipulate</code> you may find yourself writing apps that work in a similar vein without requiring the elements of the package itself.  For example <code>ChisqSimSlow()</code>, which does not require <code>manipulate</code> (and in fact runs outside of RStudio) takes arbitrary data and applies a one-at-a-time re-sampling routine to slowly build up the Null Distribution of the chi-square statistic, in a situation where one is testing whether two factor variables are associated.</p>

<p>For example, suppose we are looking at survey in which a random sample of students were asked for their sex and for their seating preference in a classroom:</p>

<pre><code>SexSeat &lt;- xtabs(~sex+seat,data=m111survey)
SexSeat

##         seat
## sex      1_front 2_middle 3_back
##   female      19       16      5
##   male         8       16      7
</code></pre>

<p>Let’s check this out with some row percentages:</p>

<pre><code>rowPerc(SexSeat)

##        1_front 2_middle 3_back Total
## female   47.50    40.00  12.50   100
## male     25.81    51.61  22.58   100
</code></pre>

<p>Hmm, the women in the sample seem much more likely than the guys to prefer the Front!  Does this data provide convincing evidence for a relationship between <strong>sex</strong> and <strong>seat</strong> in the College population at large?  To investigate this, a student might try:</p>

<pre><code>ChisqSimSlow(~sex+seat,data=m111survey)
</code></pre>

<p>Keep asking for a re-sample, and after a while you get the sense that the observed value of the chi-square statistic is not an unusually large value, if <strong>sex</strong> and <strong>seat</strong> are, all along, unrelated in the population.</p>

<p>Once students understand the import of simulation they can employ it to advantage on a large scale.  In the <code>tigerstats</code> version of the <code>chisq.test()</code>, the student might ask for:</p>

<pre><code>set.seed(2014)
chisqtestGC(~sex+seat,data=m111survey,
      simulate.p.value="random",
      B=3000,
      graph=TRUE)

## Pearson's chi-squared test with simulated p-value, random effects
## 	 (based on 3000 resamples)
## 
## Observed Counts:
##         seat
## sex      1_front 2_middle 3_back
##   female      19       16      5
##   male         8       16      7
## 
## Counts Expected by Null:
##         seat
## sex      1_front 2_middle 3_back
##   female   15.21    18.03   6.76
##   male     11.79    13.97   5.24
## 
## Contributions to the chi-square statistic:
##         seat
## sex      1_front 2_middle 3_back
##   female    0.94     0.23   0.46
##   male      1.22     0.29   0.59
## 
## 
## Chi-Square Statistic = 3.734 
## Degrees of Freedom of the table = 2 
## P-Value = 0.1727
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/reasonsteachr2.png" alt="plot of chunk reasonsteachr2" /> </p>

<h3 id="do-it-yourself">Do It Yourself</h3>

<p>I do not discuss the above apps with the expectation that colleagues at other institution will adopt them.  On the contrary, my point is merely that the folks at RStudio have provided R-users with a tool that enables ordinary instructors like us to write our own apps.  If you like a particular app, them check out the source code (<code>tigerstats</code>, for example is <a href="http:github.com/homerhanumat/tigerstats">on GitHub</a>), clean it up a bit maybe, and use it as a basis for an app tailored to your particular tastes and the needs of your particular students.</p>

<p>Better yet, persuade an upper-level student to write the app for you as a programming project:  <code>manipulate</code>’s greatest use may prove to be as a gateway-drug to coding!</p>

<h3 id="next-time">Next Time</h3>

<p>In the next post, maybe we’ll have a look at what R Studio’s <code>shiny</code> can do for an elementary class.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Five Reasons to Teach Elementary Statistics With R: #1]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/04/05/tigerstatsintro/"/>
    <updated>2014-04-05T19:30:00-04:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/04/05/tigerstatsintro</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#reason-1--package-mosaic">Reason #1:  Package <code>mosaic</code></a>    <ul>
      <li><a href="#keeping-simple-things-simple">Keeping Simple Things Simple</a></li>
      <li><a href="#flow-control-for-the-masses">Flow-Control for the Masses</a></li>
      <li><a href="#there-is-much-more">There is Much More</a></li>
    </ul>
  </li>
  <li><a href="#references">References</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>This is is first in a projected five-part series of posts aimed at colleagues who teach elementary statistics.</p>

<p>I can’t remember exactly how I first made acquaintance with R, but it’s been an important part of my teaching/consulting life since at least 2007, when I used it for the first time in an upper-level undergraduate statistics class.  As of last Fall all of our statistics classes—even the elementary ones—are based on R.  We may never return to a ground-up GUI platform.  If you teach with R but hesitate to spring such a powerful and complex tool on unsuspecting introductory students—many of whom whom will have had no prior experience with the command line, much less with coding—then I hope these posts will give you some encouragement.</p>

<h2 id="reason-1--package-mosaic">Reason #1:  Package <code>mosaic</code></h2>

<p>This package is a product of the NSF-funded <a href="http://mosaic-web.org/">Project Mosaic</a>, led by Nick Horton, Daniel Kaplan and Randall Pruim.  It’s on CRAN, but you might want to keep up with the very latest releases on Github:</p>

<pre><code>require(devtools)
install_github(repo="rpruim/mosaic")
</code></pre>

<p><code>mosaic</code> aims to flatten the learning curve for elementary students by gentling down the coding aspects of the R experience.  With <code>mosaic</code>:</p>

<ul>
  <li>students need to know relatively few R-functions in order to thrive in the introductory course;</li>
  <li>many of the these functions are “wrappers” for standard R-functions, and provide a fairly uniform interface for user input;</li>
  <li>the package provides tools that mostly obviate the need for students to deal with R as a programming language:
    <ul>
      <li>the students don’t have to write their own functions;</li>
      <li>they don’t need to think much about the different types of R objects;</li>
      <li>they don’t even need to learn about flow-control structures.</li>
    </ul>
  </li>
</ul>

<h3 id="keeping-simple-things-simple">Keeping Simple Things Simple</h3>

<p>R can make the easy stuff surprisingly tricky for beginners:  suppose for example, that you want numerical summaries of a particular numerical variable, broken down by the values of some factor variable.  Standard procedure in R would be to write your own anonymous function as an argument for <code>aggregate()</code>, thus:</p>

<pre><code>aggregate(mpg~cyl,data=mtcars,
    FUN=function(x) c(mean=mean(x),sd=sd(x)))

##   cyl mpg.mean mpg.sd
## 1   4   26.664  4.510
## 2   6   19.743  1.454
## 3   8   15.100  2.560
</code></pre>

<p><code>mosaic</code> skirts the problem by providing wrapper functions for aggregation:</p>

<pre><code>require(mosaic)

 

mean(mpg~cyl,data=mtcars)

##     4     6     8 
## 26.66 19.74 15.10

sd(mpg~cyl,data=mtcars)

##     4     6     8 
## 4.510 1.454 2.560
</code></pre>

<p>One can attain even more simplicity, at only a small cost in flexibility, by sticking to <code>mosaic</code>’s <code>favstats()</code> as a one-stop shop:</p>

<pre><code>favstats(mpg~cyl,data= mtcars)

##   .group  min    Q1 median    Q3  max  mean    sd  n missing
## 1      4 21.4 22.80   26.0 30.40 33.9 26.66 4.510 11       0
## 2      6 17.8 18.65   19.7 21.00 21.4 19.74 1.454  7       0
## 3      8 10.4 14.40   15.2 16.25 19.2 15.10 2.560 14       0
</code></pre>

<h3 id="flow-control-for-the-masses">Flow-Control for the Masses</h3>

<p><code>mosaic</code> includes powerful wrapper functions that permit extensive work with re-sampling and simulation, without the need to learn flow-control.  Here follows a <code>mosaic</code>-style implementation of a permutation test.</p>

<p>Consider the data frame <code>Pseudoscorpions</code> from the <code>abd</code> package:</p>

<pre><code>require(abd)
data(Pseudoscorpions)
</code></pre>

<p><code>Pseudoscorpions</code> contains the results of an experiment on 36 female Pseudoscorpions:  each one was either mated twice with a single male (<code>SM</code>) or was mated with two males, one time each (<code>DM</code>), receiving about the same total amount of sperm under either treatment.  The idea was to see whether an increase in genetic diversity of sperm sources increases the number of successful broods a female produces during her lifetime.</p>

<p>Here are some descriptive results:</p>

<pre><code>favstats(successful.broods~treatment,
    data=Pseudoscorpions)[c(".group","mean","sd")]

##   .group  mean    sd
## 1     DM 3.625 1.962
## 2     SM 2.200 1.609
</code></pre>

<p>For the permutation test, we first compute and store the observed difference between the sample means:</p>

<pre><code>obsDiff &lt;- compareMean(successful.broods~treatment,
    data=Pseudoscorpions)
obsDiff

## [1] -1.425
</code></pre>

<p>Next, we create an empirical Null distribution with <code>shuffle()</code> (the random permutation function) and <code>do()</code> (a for-loop wrapper):</p>

<pre><code>set.seed(12345)
nullDist &lt;- do(2500)*(
  compareMean(successful.broods~shuffle(treatment),
      data=Pseudoscorpions))
</code></pre>

<p>Finally, we call <code>statTally()</code> for numerical and graphical analysis of the results:</p>

<pre><code>statTally(obsDiff,nullDist)

## Null distribution appears to be asymmetric. (p = 1.07e-05)
## 
## Test statistic applied to sample data =  -1.425
## 
## Quantiles of test statistic applied to random data:

##    50%    90%    95%    99% 
## 0.0375 0.8250 1.0500 1.3875

## 
## Of the random samples
## 
## 	13 ( 0.52 % ) had test stats = -1.425
## 
## 	23 ( 0.92 % ) had test stats &lt; -1.425
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/reason1hist.png" alt="plot of chunk reason1hist" /> </p>

<p>We seem to have fairly strong evidence ($P \approx 1.7\%$) that mating with more males increases the number of successful broods.</p>

<h3 id="there-is-much-more">There is Much More</h3>

<p>I have only scratched the surface of the <code>mosaic</code> package, which is rich enough to support statistics instruction in both elementary and advanced courses.  The <code>mosaic</code> authors provide extensive instructor resources in the package vignettes, and frequently offer workshops and short-courses, especially through events sponsored by the <a href="https://www.causeweb.org/">Consortium for the Advancement of Undergraduate Statistics Education</a>.</p>

<p>Next week I’ll introduce a supplementary package that is intended for students who might require even more simplicity, and that aligns their R experience with a particular set of teaching objectives.</p>

<h2 id="references">References</h2>

<p>The Pseudoscorpion experiment is discussed in Whitlock and Schluter’s <em>The Analysis of Biological Data</em> (Roberts and Company Publishers; First Edition, 1st Edition July 2008).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xtabs() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/xtabstutorial/"/>
    <updated>2014-02-28T18:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/xtabstutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-factor-variable">One Factor Variable</a></li>
  <li><a href="#two-factor-variables">Two Factor Variables</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p><code>xtabs()</code> is the numerical version of <code>barchartGC()</code>.  You use it when you want to study</p>

<ul>
  <li>the distribution of one factor variable;</li>
  <li>the relationship between two factor variables.</li>
</ul>

<p>The function <code>xtabs()</code> comes with the <code>stats</code> package, which is always loaded in R.  However, some of the data and other functions that we will use come from the <code>tigerstats</code> package, so make sure that it is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="one-factor-variable">One Factor Variable</h2>

<p>To see a table of the tallies for the factor variable <strong>seat</strong> (from the <code>mat111survey</code> data frame in the <code>tigerstats</code> package):</p>

<pre><code>xtabs(~seat,data=m111survey)

## seat
##  1_front 2_middle   3_back 
##       27       32       12
</code></pre>

<p>In order to get the actual distribution of <strong>seat</strong>, you want percents rather than counts, so apply the function <code>rowPerc()</code> from <code>tigerstats</code>:</p>

<pre><code>rowPerc(xtabs(~seat,data=m111survey))

##  1_front 2_middle 3_back  Total
##    38.03    45.07  16.90 100.00
</code></pre>

<p>If you have a table of the counts for a variable, then you can enter it directly.  For example, suppose you have already made:</p>

<pre><code>Seat &lt;- xtabs(~seat,data=m111survey)
Seat

## seat
##  1_front 2_middle   3_back 
##       27       32       12
</code></pre>

<p>Then you can just enter the table into <code>rowPerc()</code>:</p>

<pre><code>rowPerc(Seat)

##  1_front 2_middle 3_back  Total
##    38.03    45.07  16.90 100.00
</code></pre>

<h2 id="two-factor-variables">Two Factor Variables</h2>

<p>You can also use <code>xtabs()</code> to study the relationship between two factor variables.  For example, if you want to see whether males and females differ in their seating preferences, then you might try formula-data input as follows:</p>

<pre><code>xtabs(~sex+seat,data=m111survey)

##         seat
## sex      1_front 2_middle 3_back
##   female      19       16      5
##   male         8       16      7
</code></pre>

<p>Of course, row percents are the way to actually study the relationship:</p>

<pre><code>rowPerc(xtabs(~sex+seat,data=m111survey))

##        1_front 2_middle 3_back Total
## female   47.50    40.00  12.50   100
## male     25.81    51.61  22.58   100
</code></pre>

<p>Note the type of formula used to study the relationship between two factor variables:</p>

<script type="math/tex; mode=display">\sim ExplanatoryFactor + ResponseFactor</script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on Lattice's Histogram()]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/histogramtutorial/"/>
    <updated>2014-02-28T17:50:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/histogramtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-numerical-variable">One Numerical Variable</a></li>
  <li><a href="#controlling-breaks">Controlling Breaks</a></li>
  <li><a href="#numerical-and-factor-variable">Numerical and Factor Variable</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>The function <code>histogram()</code> is used to study the distribution of a numerical variable.  It comes from the <code>lattice</code> package for statistical graphics, which is pre-installed with every distribution of R.  Also, package <code>tigerstats</code> depends on lattice, so if you load <code>tigerstats</code>:</p>

<pre><code>require(tigerstats)
</code></pre>

<p>then <code>lattice</code> will be loaded as well.  If you don’t plan to use <code>tigerstats</code> but you want to use the function <code>histogram()</code>, then make sure you load lattice:</p>

<pre><code>require(lattice)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<p>In this tutorial we will also use a function from the <code>mosaic</code> package, so let’s make sure it is loaded:</p>

<pre><code>require(mosaic)
</code></pre>

<h2 id="one-numerical-variable">One Numerical Variable</h2>

<p>In the <code>m11survey</code> data frame from the <code>tigerstats</code> package, suppose that you want to study the distribution of <strong>fastest</strong>, the fastest speed one has ever driven.  You can do so with the following command:</p>

<pre><code>histogram(~fastest,data=m111survey,
       type="density",
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/histtutfastest.png" alt="plot of chunk histtutfastest" /> </p>

<p>Note the use of:</p>

<ul>
  <li>the <code>xlab</code> argument to label the horizontal axis, complete with units (miles per hour);</li>
  <li>the <code>main</code> argument to provide a brief but descriptive title for the graph;</li>
  <li>the <code>type</code> argument to make a density histogram (we like this type the most, but other possible types are “count” and “percent”).</li>
</ul>

<h2 id="controlling-breaks">Controlling Breaks</h2>

<p>One of the most important ways to customize a histogram is to to set your own values for the left and right-hand boundaries of the rectangles.</p>

<p>In order to accomplish this, you should first know the range of your data values.  You can find this quickly using the <code>favstats()</code> function from package <code>mosaic</code>:</p>

<pre><code>favstats(~fastest,data=m111survey)

##  min   Q1 median    Q3 max  mean    sd  n missing
##   60 90.5    102 119.5 190 105.9 20.88 71       0
</code></pre>

<p>The minimum fastest speed is 60 mph, and the maximum fastest speed is 190 mph.</p>

<p>One possible choice for rectangle boundaries is to have the left-most rectangle begin at sixty, and then have each rectangle be 10 mph wide at the base, finally reaching a rectangle that ends at 190 mph.  In other words, we want the rectangle boundaries to be:</p>

<script type="math/tex; mode=display">60,70,80,90,100,110,120,130,140,150,160,170,280,190.</script>

<p>These numbers will be the “breaks” for the rectangles in our histogram.  We can set these breaks by putting them, as a list, into the <code>breaks</code> argument of the <code>histogram()</code> function, as follows:</p>

<pre><code>histogram(~fastest,data=m111survey,
       type="density",
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven",
       breaks=c(60,70,80,90,100,110,120,130,
                140,150,160,170,180,190))
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/histtutfastestbreaks10.png" alt="plot of chunk histtutfastestbreaks10" /> </p>

<p>You can accomplish the same thing with less typing, if you make use of the <code>seq()</code> function:</p>

<pre><code>histogram(~fastest,data=m111survey,
       type="density",
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven",
       breaks=seq(from=60,to=190,by=10))
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/histtutfastestbreaks10seq.png" alt="plot of chunk histtutfastestbreaks10seq" /> </p>

<h2 id="numerical-and-factor-variable">Numerical and Factor Variable</h2>

<p>Suppose you want to know:</p>

<blockquote>
  <p><em>Who tends to drive faster:  guys or gals?</em></p>
</blockquote>

<p>Then you might wish to study the relationship between the numerical variable <strong>fastest</strong> and the factor variable <strong>sex</strong>.  You can use histograms in order to perform such a study.</p>

<p>Try this code:</p>

<pre><code>histogram(~fastest|sex,data=m111survey,
       type="density",
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Sex",
       breaks=seq(from=60,to=190,by=10))
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/histtutfastestsexcond.png" alt="plot of chunk histtutfastestsexcond" /> </p>

<p>Note that to produce side-by-side histograms, you “condition” on the factor variable with the formula:</p>

<script type="math/tex; mode=display">\sim numerical \vert factor</script>

<p>Note also the use of “\n” to split the title into two lines:  this is a useful trick when the title is long.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on Lattice's Densityplot()]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/densityplottutorial/"/>
    <updated>2014-02-28T17:45:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/densityplottutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-numerical-variable">One Numerical Variable</a></li>
  <li><a href="#numerical-and-factor-variable">Numerical and Factor Variable</a>    <ul>
      <li><a href="#side-by-side-plots">Side-by-Side Plots</a></li>
      <li><a href="#plots-in-the-same-panel">Plots in the Same Panel</a></li>
    </ul>
  </li>
  <li><a href="#from-and-to">From and To</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>The function <code>densityplot()</code> is used to study the distribution of a numerical variable.  It comes from the <code>lattice</code> package for statistical graphics, which is pre-installed with every distribution of R.  Also, package <code>tigerstats</code> depends on lattice, so if you load <code>tigerstats</code>:</p>

<pre><code>require(tigerstats)
</code></pre>

<p>then <code>lattice</code> will be loaded as well.  If you don’t plan to use <code>tigerstats</code> but you want to use the function <code>densityplot()</code>, then make sure you load lattice:</p>

<pre><code>require(lattice)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="one-numerical-variable">One Numerical Variable</h2>

<p>In the <code>m11survey</code> data frame from the <code>tigerstats</code> package, suppose that you want to study the distribution of <strong>fastest</strong>, the fastest speed one has ever driven.  You can do so with the following command:</p>

<pre><code>densityplot(~fastest,data=m111survey,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutfastest.png" alt="plot of chunk dentutfastest" /> </p>

<p>Note the use of:</p>

<ul>
  <li>the <code>xlab</code> argument to label the horizontal axis, complete with units (miles per hour);</li>
  <li>the <code>main</code> argument to provide a brief but descriptive title for the graph.</li>
</ul>

<p>If you do not want to see the “rug” of individual data values at the bottom of the plot, set the argument <code>plot.points</code> to <code>FALSE</code>:</p>

<pre><code>densityplot(~fastest,data=m111survey,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven",
       plot.points=FALSE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutfastestnorug.png" alt="plot of chunk dentutfastestnorug" /> </p>

<h2 id="numerical-and-factor-variable">Numerical and Factor Variable</h2>

<p>Suppose you want to know:</p>

<blockquote>
  <p><em>Who tends to drive faster:  guys or gals?</em></p>
</blockquote>

<p>Then you might wish to study the relationship between the numerical variable <strong>fastest</strong> and the factor variable <strong>sex</strong>.  You can use density plots in two ways in order to perform such a study.</p>

<h3 id="side-by-side-plots">Side-by-Side Plots</h3>

<pre><code>densityplot(~fastest|sex,data=m111survey,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Sex")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutfastestsexcond.png" alt="plot of chunk dentutfastestsexcond" /> </p>

<p>Note that to produce side-by-side plots, you “condition” on the factor variable with the formula:</p>

<script type="math/tex; mode=display">\sim numerical \vert factor</script>

<p>Note also the use of “\n” to split the title into two lines:  this is a useful trick when the title is long.</p>

<h3 id="plots-in-the-same-panel">Plots in the Same Panel</h3>

<p>You can get a density plot for each value of the factor variable and have all of the plots appear in the same panel.  This is accomplished with the <code>groups</code> argument:</p>

<pre><code>densityplot(~fastest,data=m111survey,
       groups=sex,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Sex",
       plot.points=FALSE,
       auto.key=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutfastestsexgroups.png" alt="plot of chunk dentutfastestsexgroups" /> </p>

<p>Note the use of the <code>auto,key</code> argument to produce the legend at the top, so that the reader can tell which plot goes with which sex.</p>

<p>Many people think that grouped density plots allow for easier comparison than side-by-side plots do—at least if the number of groups is small.</p>

<h2 id="from-and-to">From and To</h2>

<p>In the <code>imagpop</code> data frame, the variable <strong>kkardashtemp</strong> records the rating given, by each individual in the data frame, for the celebrity Kim Kardashian.  The possible ratings range from 0 to 100.</p>

<p>Let’s make a density plot of this variable:</p>

<pre><code>densityplot(~kkardashtemp,data=imagpop,
            plot.points=FALSE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutkkard.png" alt="plot of chunk dentutkkard" /> </p>

<p>The function <code>densityplot()</code> has no way of knowing that <strong>kkardashtemp</strong> must lie between 0 and 100, so from the available data it infers that there is some possibility for a rating to be below 0 or above 100.  If you want to inform <code>denistyplot()</code> of the known limits, then use the <code>from</code> and <code>to</code> arguments, as follows:</p>

<pre><code>densityplot(~kkardashtemp,data=imagpop,
            plot.points=FALSE,
            from=0,to=100)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/dentutkkardfromto.png" alt="plot of chunk dentutkkardfromto" /> </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on Lattice's Xyplot()]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/xyplottutorial/"/>
    <updated>2014-02-28T17:30:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/xyplottutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#basic-scatterplot">Basic Scatterplot</a></li>
  <li><a href="#including-a-regression-line">Including a Regression Line</a></li>
  <li><a href="#playing-with-points">Playing With Points</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>The function <code>xyplot()</code> makes scatterplots to indicate the relationship between two numerical variables.  It comes from the <code>lattice</code> package for statistical graphics, which is pre-installed with every distribution of R.  Also, package <code>tigerstats</code> depends on lattice, so if you load <code>tigerstats</code>:</p>

<pre><code>require(tigerstats)
</code></pre>

<p>then <code>lattice</code> will be loaded as well.  If you don’t plan to use <code>tigerstats</code> but you want to use the function <code>xyplot()</code>, then make sure you load lattice:</p>

<pre><code>require(lattice)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="basic-scatterplot">Basic Scatterplot</h2>

<p>Suppose you want to know:</p>

<blockquote>
  <p><em>Do students with higher GPA’s tend to drive more slowly than students with lower GPA’s?</em></p>
</blockquote>

<p>If so, then you might check to see if numerical variable <strong>fastest</strong> (in the <code>m111survey</code> data frame from the <code>tigerstats</code> package) is realted to the numerical variable <code>GPA</code>.  Then you can make a scatterplot as follows:</p>

<pre><code>xyplot(fastest~GPA,data=m111survey,
       xlab="grade point average",
       ylab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Grade Point Average")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/xytutfastestgpa.png" alt="plot of chunk xytutfastestgpa" /> </p>

<p>Note the use of:</p>

<ul>
  <li>the <code>xlab</code> argument to label the horizontal axis;</li>
  <li>the <code>ylab</code> argument to label the vertical axis, complete with units (miles per hour);</li>
  <li>the <code>main</code> argument to provide a brief but descriptive title for the graph;</li>
  <li>the “\n” to make two lines in the title (useful if you have a long title).</li>
</ul>

<p>When we think of one variable as explanatory and the other as the response, it is common to put the explanatory on the horizontal axis and the response on the vertical axis.  This is accomplished by the formula</p>

<script type="math/tex; mode=display">response \sim explanatory</script>

<h2 id="including-a-regression-line">Including a Regression Line</h2>

<p>If you want desire a regression line along with your scatterplot, use the argument <code>type</code>, as follows:</p>

<pre><code>xyplot(fastest~GPA,data=m111survey,
       xlab="grade point average",
       ylab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Grade Point Average",
       type=c("p","r"))
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/xytutfastestgpareg.png" alt="plot of chunk xytutfastestgpareg" /> </p>

<p>The list given by <code>c("p","r")</code> tells <code>xyplot()</code> that we want both the points (“p”) and a regression line (“r”).</p>

<h2 id="playing-with-points">Playing With Points</h2>

<p>You can vary the type of point using the <code>pch</code> argument, and the color of the points with the <code>col</code> argument.  For example:</p>

<pre><code>xyplot(fastest~GPA,data=m111survey,
       xlab="grade point average",
       ylab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Grade Point Average",
       pch=19,col="blue")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/xytutfastestgpapoints.png" alt="plot of chunk xytutfastestgpapoints" /> </p>

<p>There are 25 different values for <code>pch</code>:  the integers 1 through 25.</p>

<p>There are many, many values for <code>col</code>.  You can explore 657 of them with the command:</p>

<pre><code>colors()
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on Lattice's Bwplot()]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/bwplottutorial/"/>
    <updated>2014-02-28T17:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/bwplottutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-numerical-variable">One Numerical Variable</a></li>
  <li><a href="#numerical-and-factor-variable">Numerical and Factor Variable</a></li>
  <li><a href="#warning">Warning</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>The function <code>bwplot()</code> makes box-and-whisker plots for numerical variables.  It comes from the <code>lattice</code> package for statistical graphics, which is pre-installed with every distribution of R.  Also, package <code>tigerstats</code> depends on lattice, so if you load <code>tigerstats</code>:</p>

<pre><code>require(tigerstats)
</code></pre>

<p>then <code>lattice</code> will be loaded as well.  If you don’t plan to use <code>tigerstats</code> but you want to use the function <code>bwplot()</code>, then make sure you load lattice:</p>

<pre><code>require(lattice)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="one-numerical-variable">One Numerical Variable</h2>

<p>For a box-and-whisker plot of the fastest speeds ever driven by students in the <code>m111survey</code> data frame, use the command:</p>

<pre><code>bwplot(~fastest,data=m111survey,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/bwtutfastest.png" alt="plot of chunk bwtutfastest" /> </p>

<p>Note the use of:</p>

<ul>
  <li>the <code>xlab</code> argument to label the horizontal axis, complete with units (miles per hour);</li>
  <li>the <code>main</code> argument to provide a brief but descriptive title for the graph.</li>
</ul>

<h2 id="numerical-and-factor-variable">Numerical and Factor Variable</h2>

<p>Say you want to know:</p>

<blockquote>
  <p><em>Who tends to drive faster:  the guys or the gals?</em></p>
</blockquote>

<p>Then you are studying the relationship between the numerical variable <strong>fastest</strong> and the factor variable <strong>sex</strong>.  <code>bwplot()</code> will break the fastest speeds up by sex and parallel box-and-whisker plots, if you run the following command:</p>

<pre><code>bwplot(fastest~sex,data=m111survey,
       ylab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Sex of Subject")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/bwtutfastestsex.png" alt="plot of chunk bwtutfastestsex" /> </p>

<p>Note the use of the “\n” to create a two-line title.  This trick can come in handy if your title is long!</p>

<p>If you prefer your box-and-whisker plots to be horizontal, then you can reverse the order of the variables in the formula:</p>

<pre><code>bwplot(sex~fastest,data=m111survey,
       xlab="speed (mph)",
       main="Fastest Speed Ever Driven,\nby Sex of Subject")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/bwtutfastestsexhoriz.png" alt="plot of chunk bwtutfastestsexhoriz" /> </p>

<h2 id="warning">Warning</h2>

<p>Box-and-Whisker plots are great for studying:</p>

<ul>
  <li>one numerical variable</li>
  <li>the relationship between a numerical variable and a factor variable.</li>
</ul>

<p>However, if you try to study the relationship between two numerical variables with <code>bwplot()</code>, you will get bizarre results.</p>

<p>For example, suppose you want to study the relationship between fastest speed ever driven (<strong>fastest</strong>) and the grade point average (<strong>GPA</strong>) of the subjects in <code>m111survey</code>:</p>

<pre><code>bwplot(fastest~GPA,data=m111survey,
       ylab="speed (mph)",
       xbal="grade-point average",
       main="Fastes Speed Ever Driven,\nby Grade-Point Average")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/bwtutbad.png" alt="plot of chunk bwtutbad" /> </p>

<p><code>bwplot()</code> expects at least one of the two variable in the formula to be numerical.  When it is presented with two numerical variables it politely makes do—apparently converting <strong>fastest</strong> into a new factor variable—but the resulting graph doesn’t make any sense at all.</p>

<p>Use <code>xyplot()</code> (scatterplots) to study the relationship between two numerical variables.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[proptestGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/proptestGCtutorial/"/>
    <updated>2014-02-28T16:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/proptestGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-proportion-from-data-frame-read-this">One Proportion, From Data Frame (Read This!!)</a>    <ul>
      <li><a href="#confidence-interval-only">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test">Interval and Test</a></li>
      <li><a href="#graph-of-the-p-value">Graph of the P-Value</a></li>
      <li><a href="#limiting-output">Limiting Output</a></li>
    </ul>
  </li>
  <li><a href="#one-proportion-from-summary-data">One Proportion, From Summary Data</a>    <ul>
      <li><a href="#confidence-interval-only-1">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-1">Interval and Test</a></li>
    </ul>
  </li>
  <li><a href="#difference-of-two-proportions-data-frame">Difference of Two Proportions, Data Frame</a>    <ul>
      <li><a href="#confidence-interval-only-2">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-2">Interval and Test</a></li>
      <li><a href="#order-of-the-groups">Order of the Groups</a></li>
    </ul>
  </li>
  <li><a href="#difference-of-two-proportions-summary-data">Difference of Two Proportions, Summary Data</a>    <ul>
      <li><a href="#confidence-interval-only-3">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-3">Interval and Test</a></li>
    </ul>
  </li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>You use <code>proptestGC()</code> for inferential procedures regarding:</p>

<ul>
  <li>one population proportion $p$;</li>
  <li>the difference of two population proportions, $p_1 - p_2$.</li>
</ul>

<p>The function comes from the <code>tigerstats</code> package, so make sure that <code>tigerstats</code> is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="one-proportion-from-data-frame-read-this">One Proportion, From Data Frame (Read This!!)</h2>

<p>In inference procedures regarding one proportion, <code>binomtestGC()</code> is preferred over <code>proptestGC()</code>, especially at smaller sample sizes.  Nevertheless, read this section carefully.  It talks about:</p>

<ul>
  <li>what to count as a “success”,</li>
  <li>levels of confidence,</li>
  <li>types of Alternative Hypothesis,</li>
  <li>graphs of the P-value, and</li>
  <li>an option to limit output to the console</li>
</ul>

<p>in ways that apply to all uses of <code>proptestGC()</code>.</p>

<h3 id="confidence-interval-only">Confidence Interval Only</h3>

<p>In the <code>m111survey</code> data from the <code>tigerstats</code> package, suppose you want a 95%-confidence interval for:</p>

<blockquote>
  <p>$p =$ the proportion of all Georgetown College students who are female.</p>
</blockquote>

<p>Use the function:</p>

<pre><code>proptestGC(~sex,data=m111survey,
           success="female")

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.448016            0.678745
</code></pre>

<p>Note that the <code>success</code> argument is set to “female” in order to make the function recognize $p$ as the population proportion of <em>females</em>, rather than the proportion of males (or of some other value of the variable in question).</p>

<p>To get any other level of confidence, you need to use the <code>conf.level</code> argument, indicating your desired level of confidence in decimal (not percentage) form.</p>

<p>For example, for a 90%-confidence interval for $\mu$, use</p>

<pre><code>proptestGC(~sex,data=m111survey,
           success="female",conf.level=0.90)

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 90% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.466564            0.660197
</code></pre>

<h3 id="interval-and-test">Interval and Test</h3>

<p>If you want a test of significance as well as the confidence interval, then</p>

<ul>
  <li>use the <code>p</code> argument to set what the Null Hypothesis thinks that the value of $p$ is;</li>
  <li>use the <code>alternative</code> argument to specify the Alternative Hypothesis.</li>
</ul>

<p>For example, if the hypotheses are:</p>

<blockquote>
  <p>$H_0:  p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a: p &gt; 0.50$</p>
</blockquote>

<p>Then use:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
           success="female",alternative="greater")

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.466564            1.000000             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &gt; 0.5 
## 
## 	Test Statistic:		z = 0.9571 
## 	P-value:		P = 0.1692
</code></pre>

<p>If the hypotheses are:</p>

<blockquote>
  <p>$H_0:  p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a: p &lt; 0.50$</p>
</blockquote>

<p>Then use:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
           success="female",alternative="less")

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.000000            0.660197             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &lt; 0.5 
## 
## 	Test Statistic:		z = 1.196 
## 	P-value:		P = 0.8842
</code></pre>

<p>If the hypotheses are:</p>

<blockquote>
  <p>$H_0:  p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a: p \neq 0.50$</p>
</blockquote>

<p>Then use:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
        success="female",alternative="two.sided")

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.448016            0.678745             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p != 0.5 
## 
## 	Test Statistic:		z = 0.9571 
## 	P-value:		P = 0.3385
</code></pre>

<p>But note that the default value of <code>alternative</code> is “two.sided”, so if you want you could just leave it out and still get a two-sided test:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
           success="female")
</code></pre>

<h3 id="graph-of-the-p-value">Graph of the P-Value</h3>

<p>Anytime you want, you can get a graph of the $P$-value for your test, simply by setting the argument <code>graph</code> to <code>TRUE</code>:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
        success="female",graph=TRUE)

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  female  n estimated.prop
##      40 71         0.5634
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.05886 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.448016            0.678745             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p != 0.5 
## 
## 	Test Statistic:		z = 0.9571 
## 	P-value:		P = 0.3385
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/proptesttutoneprop2sided.png" alt="plot of chunk proptesttutoneprop2sided" /> </p>

<h3 id="limiting-output">Limiting Output</h3>

<p>Sometimes you don’t need R to print so much information to the console.  If you want only the basics (such as a confidence interval, the test statistic and $P$-value), then set the <code>verbose</code> argument to <code>FALSE</code>:</p>

<pre><code>proptestGC(~sex,data=m111survey,p=0.50,
        success="female",verbose=FALSE)

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 	Continuity Correction Applied to Test Statistic
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.448016            0.678745             
## 
## 	Test Statistic:		z = 0.9571 
## 	P-value:		P = 0.3385
</code></pre>

<h2 id="one-proportion-from-summary-data">One Proportion, From Summary Data</h2>

<p>Again note that <code>binomtestGC()</code> is preferred in this situation, especially at smaller sample sizes.</p>

<h3 id="confidence-interval-only-1">Confidence Interval Only</h3>

<p>Say that you have taken a simple random sample of size $n=2500$ from the population of all registered voters in the U.S., and you find that 1325 of them favor the Affordable Care Act.  Suppose that you would like to make a confidence interval for</p>

<blockquote>
  <p>$p =$ the proportion of all registered voters in the U.S. who support the Act.</p>
</blockquote>

<p>You don’t have the raw data present in a data frame, but you have enough summary data to use <code>proptestGC()</code>.  You just have to set some new arguments:</p>

<ul>
  <li>set <code>x</code> to 1325, the number of “successes” you are counting up;</li>
  <li>set <code>n</code> to 2500, the sample size.</li>
</ul>

<p>So if you only want a 95%-confidence interval for $p$. use:</p>

<pre><code>proptestGC(x=1325,n=2500)

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Results based on Summary Data
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  successes    n estimated.prop
##       1325 2500           0.53
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.53 
## SE(p.hat):	 0.009982 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.510436            0.549564
</code></pre>

<h3 id="interval-and-test-1">Interval and Test</h3>

<p>If you also want to do a test of significance, again specify <code>p</code> and <code>alternative</code>.  For example, to test the hypotheses</p>

<blockquote>
  <p>$H_0:  p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a: p &lt; 0.50$</p>
</blockquote>

<p>use:</p>

<pre><code>proptestGC(x=1325,n=2500,
        p=0.50,,alternative="less")

## 
## 
## Inferential Procedures for a Single Proportion p:
## 	Results based on Summary Data
## 	Continuity Correction Applied to Test Statistic
## 
## 
## Descriptive Results:
## 
##  successes    n estimated.prop
##       1325 2500           0.53
## 
## 
## Inferential Results:
## 
## Estimate of p:	 0.53 
## SE(p.hat):	 0.009982 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.000000            0.546419             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &lt; 0.5 
## 
## 	Test Statistic:		z = 3.025 
## 	P-value:		P = 0.9988
</code></pre>

<h2 id="difference-of-two-proportions-data-frame">Difference of Two Proportions, Data Frame</h2>

<h3 id="confidence-interval-only-2">Confidence Interval Only</h3>

<p>Suppose</p>

<blockquote>
  <p>$p_1 =$ proportion of all GC females who believe they get enough sleep</p>
</blockquote>

<blockquote>
  <p>$p_2 =$ proportion of all GC males who believe they get enough sleep</p>
</blockquote>

<p>If you desire, say, an 85%-confidence interval for $p_1 - p_2$, then use:</p>

<pre><code>proptestGC(~sex+enough_Sleep,data=m111survey,
        success="yes",conf.level=0.85)

## 
## 
## Inferential Procedures for the Difference of Two Proportions p1-p2:
## 	 enough_Sleep grouped by sex 
## 
## 
## Descriptive Results:
## 
##        yes  n estimated.prop
## female  14 40         0.3500
## male    11 31         0.3548
## 
## 
## Inferential Results:
## 
## Estimate of p1-p2:	 -0.004839 
## SE(p1.hat - p2.hat):	 0.1143 
## 
## 85% Confidence Interval for p1-p2:
## 
##           lower.bound         upper.bound          
##           -0.169426           0.159749
</code></pre>

<h3 id="interval-and-test-2">Interval and Test</h3>

<p>If you want a 95%-confidence interval for $p_1 - p_2$ and you would like to test the hypotheses:</p>

<blockquote>
  <p>$H_0:  p_1 - p_2 = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: p_1 - p_2 \neq 0$</p>
</blockquote>

<p>then use:</p>

<pre><code>proptestGC(~sex+enough_Sleep,data=m111survey,
      success="yes",p=0)

## 
## 
## Inferential Procedures for the Difference of Two Proportions p1-p2:
## 	 enough_Sleep grouped by sex 
## 
## 
## Descriptive Results:
## 
##        yes  n estimated.prop
## female  14 40         0.3500
## male    11 31         0.3548
## 
## 
## Inferential Results:
## 
## Estimate of p1-p2:	 -0.004839 
## SE(p1.hat - p2.hat):	 0.1143 
## 
## 95% Confidence Interval for p1-p2:
## 
##           lower.bound         upper.bound          
##           -0.228929           0.219252             
## 
## Test of Significance:
## 
## 	H_0:  p1-p2 = 0
## 	H_a:  p1-p2 != 0
## 
## 	Test Statistic:		z = -0.04232 
## 	P-value:		P = 0.9662
</code></pre>

<p>Notice that this time:</p>

<ul>
  <li>you specified the Null’s belief about the value of $p_1-p_2$ using the <code>p</code> argument;</li>
  <li>you did not have to set <code>conf.level</code> to 0.95 (the default value of the argument is 0.95 already);</li>
  <li>you did not have to specify the two-sided alternative (the default value of <code>alternative</code> is already “two.sided”).</li>
</ul>

<h3 id="order-of-the-groups">Order of the Groups</h3>

<p>Suppose that in the previous situation you had defined:</p>

<blockquote>
  <p>$p_1 =$ proportion of all GC males who believe they get enough sleep</p>
</blockquote>

<blockquote>
  <p>$p_2 =$ proportion of all GC females who believe they get enough sleep</p>
</blockquote>

<p>Then for you, the first population is all GC males and the second population is all GC females.  In order to guarantee that R abides by your choice, use the argument <code>first</code>:</p>

<pre><code>proptestGC(~sex+enough_Sleep,data=m111survey,
      success="yes",p=0,first="male")

## 
## 
## Inferential Procedures for the Difference of Two Proportions p1-p2:
## 	 enough_Sleep grouped by sex 
## 
## 
## Descriptive Results:
## 
##        yes  n estimated.prop
## male    11 31         0.3548
## female  14 40         0.3500
## 
## 
## Inferential Results:
## 
## Estimate of p1-p2:	 0.004839 
## SE(p1.hat - p2.hat):	 0.1143 
## 
## 95% Confidence Interval for p1-p2:
## 
##           lower.bound         upper.bound          
##           -0.219252           0.228929             
## 
## Test of Significance:
## 
## 	H_0:  p1-p2 = 0
## 	H_a:  p1-p2 != 0
## 
## 	Test Statistic:		z = 0.04232 
## 	P-value:		P = 0.9662
</code></pre>

<h2 id="difference-of-two-proportions-summary-data">Difference of Two Proportions, Summary Data</h2>

<h3 id="confidence-interval-only-3">Confidence Interval Only</h3>

<p>Suppose that you have taken two independent samples from two populations (or performed a completely randomized experiment with two treatment groups), and you have the following summary data:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Group</th>
      <th style="text-align: center">Success Count</th>
      <th style="text-align: center">Sample Size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">group one</td>
      <td style="text-align: center">1325</td>
      <td style="text-align: center">2500</td>
    </tr>
    <tr>
      <td style="text-align: center">group two</td>
      <td style="text-align: center">905</td>
      <td style="text-align: center">1800</td>
    </tr>
  </tbody>
</table>

<p>You need to provide the summary data to the arguments <code>x</code> and <code>n</code> as lists using the <code>c()</code> function.  In each list, data from the first group should come first.</p>

<p>For a 95%-confidence interval for $p_1 - p_2$, use:</p>

<pre><code>proptestGC(x=c(1325,905),n=c(2500,1800))

## 
## 
## Inferential Procedures for the Difference of Two Proportions p1-p2:
## 	Results taken from summary data.
## 
## 
## Descriptive Results:
## 
##         successes    n estimated.prop
## Group 1      1325 2500         0.5300
## Group 2       905 1800         0.5028
## 
## 
## Inferential Results:
## 
## Estimate of p1-p2:	 0.02722 
## SE(p1.hat - p2.hat):	 0.01544 
## 
## 95% Confidence Interval for p1-p2:
## 
##           lower.bound         upper.bound          
##           -0.003048           0.057492
</code></pre>

<h3 id="interval-and-test-3">Interval and Test</h3>

<p>Suppose that you want a 90%-confidence interval for $p_1 - p_2$ and that you would like to test the hypotheses:</p>

<blockquote>
  <p>$H_0:  p_1 - p_2 = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: p_1 - p_2 &gt; 0$</p>
</blockquote>

<p>Suppose also that you want a graph of the $P$-value.  Then use:</p>

<pre><code>proptestGC(x=c(1325,905),n=c(2500,1800),
           p=0,conf.level=0.90,graph=TRUE)

## 
## 
## Inferential Procedures for the Difference of Two Proportions p1-p2:
## 	Results taken from summary data.
## 
## 
## Descriptive Results:
## 
##         successes    n estimated.prop
## Group 1      1325 2500         0.5300
## Group 2       905 1800         0.5028
## 
## 
## Inferential Results:
## 
## Estimate of p1-p2:	 0.02722 
## SE(p1.hat - p2.hat):	 0.01544 
## 
## 90% Confidence Interval for p1-p2:
## 
##           lower.bound         upper.bound          
##           0.001819            0.052626             
## 
## Test of Significance:
## 
## 	H_0:  p1-p2 = 0
## 	H_a:  p1-p2 != 0
## 
## 	Test Statistic:		z = 1.763 
## 	P-value:		P = 0.07797
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/proptesttut2propssummary.png" alt="plot of chunk proptesttut2propssummary" /> </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[binomtestGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/28/binomtestGCtutorial/"/>
    <updated>2014-02-28T15:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/28/binomtestGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#working-from-a-data-frame">Working from a Data Frame</a></li>
  <li><a href="#setting-the-confidence-level">Setting the Confidence Level</a></li>
  <li><a href="#significance-tests">Significance Tests</a></li>
  <li><a href="#a-graph-of-the-p-value">A Graph of the $P$-Value</a></li>
  <li><a href="#working-with-summary-data">Working with Summary Data</a></li>
  <li><a href="#want-less-output">Want Less Output?</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>You use <code>binomtestGC()</code> for inferential procedures regarding one population proportion $p$.  The function <code>proptestGC()</code> can also handle this analysis, but <code>binomtestGC()</code> computes exact $P$-values rather than employing the (sometimes crude) normal approximation, and it also uses a somewhat more sophisticated method to compute confidence intervals.</p>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="working-from-a-data-frame">Working from a Data Frame</h2>

<p>Let</p>

<blockquote>
  <p>$p =$ the proportion of all Georgetown College students who are female</p>
</blockquote>

<p>Suppose that you would like a 95%-confidence interval for $p$.  Since <strong>sex</strong> is present as a variable in the <code>m111survey</code> data frame, so you can use formula-data input in the usual way to direct the attention of <code>binomtestGC()</code> to <strong>sex</strong> as the data.</p>

<p>However, when the function looks at <strong>sex</strong>, it sees the values “female” and “male”.  It needs to be told which of them to count as a “success” when it computes the sample proportion $\hat{p}$.  You do this with the <code>success</code> argument.</p>

<p>So you use:</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="female")

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  40 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.0589 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.440455            0.680850
</code></pre>

<p>Note that you did not have to specify a confidence level:  by default, the function returns a 95%-confidence interval.</p>

<h2 id="setting-the-confidence-level">Setting the Confidence Level</h2>

<p>You can get intervals with other levels of confidence besides 95%, simply by setting the argument <code>conf.level</code> to the desired level (expressed as a proportion, rather than as a percentage).</p>

<p>For example, if you want a 90%-confidence interval for $p$, then you use:</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="female",conf.level=0.90)

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  40 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.5634 
## SE(p.hat):	 0.0589 
## 
## 90% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.458929            0.663741
</code></pre>

<h2 id="significance-tests">Significance Tests</h2>

<p>Let’s now let</p>

<blockquote>
  <p>$p =$ the proportion of all Georgetown College students who are male</p>
</blockquote>

<p>(Notice that, for variety’s sake, we have switched to counting up males.)</p>

<p>Suppose that we want to perform a test of significance.  Then we would use:</p>

<ul>
  <li>the argument <code>p</code> to indicate the belief of the Null Hypothesis as to the value of $p$;</li>
  <li>the argument <code>alternative</code> to specify the direction of the Alternative Hypothesis.  The possible values of this argument are:
    <ul>
      <li>“less”</li>
      <li>“greater”</li>
      <li>“two.sided” (the default value)</li>
    </ul>
  </li>
</ul>

<p>For example, if we want to test the hypotheses:</p>

<blockquote>
  <p>$H_0 : p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a : p &lt; 0.50$</p>
</blockquote>

<p>then we use</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="male",p=0.50,
            alternative="less")

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  31 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.4366 
## SE(p.hat):	 0.0589 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.000000            0.541071             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &lt; 0.5 
## 
## 	P-value:		P = 0.1712
</code></pre>

<p>To test the hypotheses</p>

<blockquote>
  <p>$H_0 : p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a : p &gt; 0.50$</p>
</blockquote>

<p>then we use</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="male",p=0.50,
            alternative="greater")

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  31 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.4366 
## SE(p.hat):	 0.0589 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.336259            1.000000             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &gt; 0.5 
## 
## 	P-value:		P = 0.8825
</code></pre>

<p>If we want a two-side test</p>

<blockquote>
  <p>$H_0 : p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a : p \neq 0.50$</p>
</blockquote>

<p>then we use</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="male",p=0.50)

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  31 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.4366 
## SE(p.hat):	 0.0589 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.319150            0.559545             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p != 0.5 
## 
## 	P-value:		P = 0.3425
</code></pre>

<p>Note that there is no need to specify an alternative, since the default value of <code>alternative</code> is “two.sided”.</p>

<h2 id="a-graph-of-the-p-value">A Graph of the $P$-Value</h2>

<p>We can get a graph of the $P$-value simply by setting the argument <code>graph</code> to <code>TRUE</code>:</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="male",p=0.50,
            alternative="less",
            graph=TRUE)

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 
## 
## Descriptive Results:  31 successes in 71 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.4366 
## SE(p.hat):	 0.0589 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.000000            0.541071             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p &lt; 0.5 
## 
## 	P-value:		P = 0.1712
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtesttutsexless.png" alt="plot of chunk binomtesttutsexless" /> </p>

<h2 id="working-with-summary-data">Working with Summary Data</h2>

<p>Suppose that in a poll of 2500 randomly selected registered voters, 1325 of them indicated support for the Affordable Care Act.  Suppose that we want a confidence interval for $p$, the proportion of all registered voters who favor the Act, and a two-sided test of significance with the hypotheses:</p>

<blockquote>
  <p>$H_0 : p = 0.50$</p>
</blockquote>

<blockquote>
  <p>$H_a : p \neq 0.50$</p>
</blockquote>

<p>We do not have raw data from a data frame, but the summary information we are given will suffice for <code>binomtestGC()</code>.  We need only:</p>

<ul>
  <li>set the argument <code>x</code> to the number of successes (the count of people who said they support the Act), and</li>
  <li>set the argument <code>n</code> to the sample size.</li>
</ul>

<p>Hence we use:</p>

<pre><code>binomtestGC(x=1325,n=2500,p=0.50)

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Results based on Summary Data
## 
## 
## Descriptive Results:  1325 successes in 2500 trials
## 
## Inferential Results:
## 
## Estimate of p:	 0.53 
## SE(p.hat):	 0.01 
## 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.510210            0.549719             
## 
## Test of Significance:
## 
## 	H_0:  p = 0.5 
## 	H_a:  p != 0.5 
## 
## 	P-value:		P = 0.0029
</code></pre>

<h2 id="want-less-output">Want Less Output?</h2>

<p>Sometimes you don’t need to see quite so much output to the console. If you only wantf the basics (confidence interval for $p$ and $P$-value for your test), then set the argument <code>verbose</code> to <code>FALSE</code>.</p>

<p>For example, if you want a 90%-confidence interval and a two-sided test then try:</p>

<pre><code>binomtestGC(~sex,data=m111survey,
            success="male",p=0.50,
            verbose=FALSE)

## 
## Exact Binomial Procedures for a Single Proportion p:
## 	Variable under study is sex 
## 95% Confidence Interval for p:
## 
##           lower.bound         upper.bound          
##           0.319150            0.559545             
## 
## 	P-value:		P = 0.3425
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ttestGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/27/ttestGCtutorial/"/>
    <updated>2014-02-27T15:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/27/ttestGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-mean-from-data-frame-read-this">One Mean, From Data Frame (Read This!!)</a>    <ul>
      <li><a href="#confidence-interval-only">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test">Interval and Test</a></li>
      <li><a href="#graph-of-the-p-value">Graph of the P-Value</a></li>
      <li><a href="#limiting-output">Limiting Output</a></li>
    </ul>
  </li>
  <li><a href="#one-mean-from-summary-data">One Mean, From Summary Data</a>    <ul>
      <li><a href="#confidence-interval-only-1">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-1">Interval and Test</a></li>
    </ul>
  </li>
  <li><a href="#difference-of-two-means-data-frame">Difference of Two Means, Data Frame</a>    <ul>
      <li><a href="#confidence-interval-only-2">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-2">Interval and Test</a></li>
      <li><a href="#order-of-the-groups">Order of the Groups</a></li>
    </ul>
  </li>
  <li><a href="#difference-of-two-means-summary-data">Difference of Two Means, Summary Data</a>    <ul>
      <li><a href="#confidence-interval-only-3">Confidence Interval Only</a></li>
      <li><a href="#interval-and-test-3">Interval and Test</a></li>
    </ul>
  </li>
  <li><a href="#mean-of-differences">Mean of Differences</a>    <ul>
      <li><a href="#both-variables-in-the-data-frame">Both Variables in the Data Frame</a>        <ul>
          <li><a href="#confidence-interval-only-4">Confidence Interval Only</a></li>
          <li><a href="#interval-and-test-4">Interval and Test</a></li>
        </ul>
      </li>
      <li><a href="#the-difference-is-in-the-data-frame">The Difference is in the Data Frame</a>        <ul>
          <li><a href="#confidence-interval-only-5">Confidence Interval Only</a></li>
          <li><a href="#interval-and-test-5">Interval and Test</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p>You use <code>ttestGC()</code> for inferential procedures regarding:</p>

<ul>
  <li>one population mean $\mu$;</li>
  <li>the difference of two population means, $\mu_1 - \mu_2$;</li>
  <li>the mean $\mu_d$ of paired differences in a population.</li>
</ul>

<p>The function comes from the <code>tigerstats</code> package, so make sure that <code>tigerstats</code> is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="one-mean-from-data-frame-read-this">One Mean, From Data Frame (Read This!!)</h2>

<p>Read this section carefully.  It talks about:</p>

<ul>
  <li>levels of confidence,</li>
  <li>types of Alternative Hypothesis,</li>
  <li>graphs of the P-value, and</li>
  <li>an option to limit output to the console</li>
</ul>

<p>in ways that apply to all uses of <code>ttestGC()</code>.</p>

<h3 id="confidence-interval-only">Confidence Interval Only</h3>

<p>In the <code>m111survey</code> data from the <code>tigerstats</code> package, suppose you want a 95%-confidence interval for:</p>

<blockquote>
  <p>$\mu =$ the mean fastest speed ever driven, for all GC students.</p>
</blockquote>

<p>Use the function:</p>

<pre><code>ttestGC(~fastest,data=m111survey)

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           100.959833          110.842984
</code></pre>

<p>To get any other level of confidence, you need to use the <code>conf.level</code> argument, indicating your desired level of confidence in decimal (not percentage) form.</p>

<p>For example, for a 90%-confidence interval for $\mu$, use</p>

<pre><code>ttestGC(~fastest,data=m111survey,conf.level=0.90)

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 90% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           101.771329          110.031488
</code></pre>

<h3 id="interval-and-test">Interval and Test</h3>

<p>If you want a test of significance as well as the confidence interval, then</p>

<ul>
  <li>use the <code>mu</code> argument to set what the Null Hypothesis thinks that the value of $\mu$ is;</li>
  <li>use the <code>alternative</code> argument to specify the Alternative Hypothesis.</li>
</ul>

<p>For example, if the hypotheses are:</p>

<blockquote>
  <p>$H_0:  \mu = 100$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu &gt; 100$</p>
</blockquote>

<p>Then use:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100,alternative="greater")

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           101.771329          Inf                  
## 
## Test of Significance:
## 
## 	H_0:  mu = 100 
## 	H_a:  mu &gt; 100 
## 
## 	Test Statistic:		t = 2.382 
## 	Degrees of Freedom:	  70 
## 	P-value:		P = 0.009974
</code></pre>

<p>If the hypotheses are:</p>

<blockquote>
  <p>$H_0:  \mu = 100$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu &lt; 100$</p>
</blockquote>

<p>Then use:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100,alternative="less")

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           -Inf                110.031488           
## 
## Test of Significance:
## 
## 	H_0:  mu = 100 
## 	H_a:  mu &lt; 100 
## 
## 	Test Statistic:		t = 2.382 
## 	Degrees of Freedom:	  70 
## 	P-value:		P = 0.99
</code></pre>

<p>If the hypotheses are:</p>

<blockquote>
  <p>$H_0:  \mu = 100$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu \neq 100$</p>
</blockquote>

<p>Then use:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100,
        alternative="two.sided")

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           100.959833          110.842984           
## 
## Test of Significance:
## 
## 	H_0:  mu = 100 
## 	H_a:  mu != 100 
## 
## 	Test Statistic:		t = 2.382 
## 	Degrees of Freedom:	  70 
## 	P-value:		P = 0.01995
</code></pre>

<p>But note that the default value of <code>alternative</code> is “two.sided”, so if you want you could just leave it out and still get a two-sided test:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100)
</code></pre>

<h3 id="graph-of-the-p-value">Graph of the P-Value</h3>

<p>Anytime you want, you can get a graph of the $P$-value for your test, simply by setting the argument <code>graph</code> to <code>TRUE</code>:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100,
        alternative="two.sided",graph=TRUE)

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  variable  mean    sd  n
##   fastest 105.9 20.88 71
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 105.9 
## SE(x.bar):	 2.478 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           100.959833          110.842984           
## 
## Test of Significance:
## 
## 	H_0:  mu = 100 
## 	H_a:  mu != 100 
## 
## 	Test Statistic:		t = 2.382 
## 	Degrees of Freedom:	  70 
## 	P-value:		P = 0.01995
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/ttesttutonemean2sided.png" alt="plot of chunk ttesttutonemean2sided" /> </p>

<h3 id="limiting-output">Limiting Output</h3>

<p>Sometimes you don’t need R to print so much information to the console.  If you want only the basics (such as a confidence interval, the test statistic and $P$-value), then set the <code>verbose</code> argument to <code>FALSE</code>:</p>

<pre><code>ttestGC(~fastest,data=m111survey,mu=100,
        alternative="two.sided",verbose=FALSE)

## 
## 
## Inferential Procedures for One Mean mu:
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           100.959833          110.842984           
## 
## 	Test Statistic:		t = 2.382 
## 	Degrees of Freedom:	  70 
## 	P-value:		P = 0.01995
</code></pre>

<h2 id="one-mean-from-summary-data">One Mean, From Summary Data</h2>

<h3 id="confidence-interval-only-1">Confidence Interval Only</h3>

<p>Say that you have taken a simple random sample from some large population, and:</p>

<ul>
  <li>the sample mean is $\bar{x}=30$,</li>
  <li>the sample standard deviation is $s=4$,</li>
  <li>the sample size was $n=40$.</li>
</ul>

<p>You don’t have the raw data present in a data frame, but you have enough summary data to use <code>ttestGC()</code>.  You just have to set some new arguments:</p>

<ul>
  <li>set <code>mean</code> to the sample mean;</li>
  <li>set <code>sd</code> to the sample standard deviation;</li>
  <li>set <code>n</code> to the sample size.</li>
</ul>

<p>So if you only want a 95%-confidence interval for $\mu$. use:</p>

<pre><code>ttestGC(mean=30,sd=4,n=40)

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  mean sd  n
##    30  4 40
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 30 
## SE(x.bar):	 0.6325 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           28.720738           31.279262
</code></pre>

<h3 id="interval-and-test-1">Interval and Test</h3>

<p>If you also want to do a test of significance, again specify <code>mu</code> and <code>alternative</code>.  For example, to test the hypotheses</p>

<blockquote>
  <p>$H_0:  \mu = 32$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu &lt; 32$</p>
</blockquote>

<p>use:</p>

<pre><code>ttestGC(mean=30,sd=4,n=40,
        mu=32,alternative="less")

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##  mean sd  n
##    30  4 40
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 30 
## SE(x.bar):	 0.6325 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           -Inf                31.065609            
## 
## Test of Significance:
## 
## 	H_0:  mu = 32 
## 	H_a:  mu &lt; 32 
## 
## 	Test Statistic:		t = -3.162 
## 	Degrees of Freedom:	  39 
## 	P-value:		P = 0.001514
</code></pre>

<h2 id="difference-of-two-means-data-frame">Difference of Two Means, Data Frame</h2>

<h3 id="confidence-interval-only-2">Confidence Interval Only</h3>

<p>Suppose</p>

<blockquote>
  <p>$\mu_1 =$ mean fastest speed ever driven, by all GC females</p>
</blockquote>

<blockquote>
  <p>$\mu_2 =$ mean fastest speed ever driven, by all GC males</p>
</blockquote>

<p>If you desire, say, an 85%-confidence interval for $\mu_1 - \mu_2$, then use:</p>

<pre><code>ttestGC(fastest~sex,data=m111survey,
        conf.level=0.85)

## 
## 
## Inferential Procedures for the Difference of Two Means mu1-mu2:
## 	(Welch's Approximation Used for Degrees of Freedom)
## 	 fastest grouped by sex 
## 
## 
## Descriptive Results:
## 
##   group  mean    sd  n
##  female 100.0 17.61 40
##    male 113.5 22.57 31
## 
## 
## Inferential Results:
## 
## Estimate of mu1-mu2:	 -13.4 
## SE(mu1.hat - mu2.hat):	 4.918 
## 
## 85% Confidence Interval for mu1-mu2:
## 
##           lower.bound         upper.bound          
##           -20.579953          -6.223273
</code></pre>

<h3 id="interval-and-test-2">Interval and Test</h3>

<p>If you want a 95%-confidence interval for $\mu_1 - \mu_2$ and you would like to test the hypotheses:</p>

<blockquote>
  <p>$H_0:  \mu_1 - \mu_2 = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu_1 - \mu_2 \neq 0$</p>
</blockquote>

<p>then use:</p>

<pre><code>ttestGC(fastest~sex,data=m111survey,
      mu=0)

## 
## 
## Inferential Procedures for the Difference of Two Means mu1-mu2:
## 	(Welch's Approximation Used for Degrees of Freedom)
## 	 fastest grouped by sex 
## 
## 
## Descriptive Results:
## 
##   group  mean    sd  n
##  female 100.0 17.61 40
##    male 113.5 22.57 31
## 
## 
## Inferential Results:
## 
## Estimate of mu1-mu2:	 -13.4 
## SE(mu1.hat - mu2.hat):	 4.918 
## 
## 95% Confidence Interval for mu1-mu2:
## 
##           lower.bound         upper.bound          
##           -23.254640          -3.548586            
## 
## Test of Significance:
## 
## 	H_0:  mu1-mu2 = 0 
## 	H_a:  mu1-mu2 != 0 
## 
## 	Test Statistic:		t = -2.725 
## 	Degrees of Freedom:	  55.49 
## 	P-value:		P = 0.008579
</code></pre>

<p>Notice that this time:</p>

<ul>
  <li>you specified the Null’s belief about the value of $\mu<em>1-\mu</em>2$ using the <code>mu</code> argument;</li>
  <li>you did not have to set <code>conf.level</code> to 0.95 (the default value of the argument is 0.95 already);</li>
  <li>you did not have to specify the two-sided alternative (the default value of <code>alternative</code> is already “two.sided”).</li>
</ul>

<h3 id="order-of-the-groups">Order of the Groups</h3>

<p>Suppose that in the previous situation you had defined:</p>

<blockquote>
  <p>$\mu_1 =$ mean fastest speed ever driven, by all GC males</p>
</blockquote>

<blockquote>
  <p>$\mu_2 =$ mean fastest speed ever driven, by all GC females</p>
</blockquote>

<p>Then for you, the first population is all GC males and the second population is all GC females.  In order to guarantee that R abides by your choice, use the argument <code>first</code>:</p>

<pre><code>ttestGC(fastest~sex,data=m111survey,
      mu=0,first="male")

## 
## 
## Inferential Procedures for the Difference of Two Means mu1-mu2:
## 	(Welch's Approximation Used for Degrees of Freedom)
## 	 fastest grouped by sex 
## 
## 
## Descriptive Results:
## 
##   group  mean    sd  n
##    male 113.5 22.57 31
##  female 100.0 17.61 40
## 
## 
## Inferential Results:
## 
## Estimate of mu1-mu2:	 13.4 
## SE(mu1.hat - mu2.hat):	 4.918 
## 
## 95% Confidence Interval for mu1-mu2:
## 
##           lower.bound         upper.bound          
##           3.548586            23.254640            
## 
## Test of Significance:
## 
## 	H_0:  mu1-mu2 = 0 
## 	H_a:  mu1-mu2 != 0 
## 
## 	Test Statistic:		t = 2.725 
## 	Degrees of Freedom:	  55.49 
## 	P-value:		P = 0.008579
</code></pre>

<h2 id="difference-of-two-means-summary-data">Difference of Two Means, Summary Data</h2>

<h3 id="confidence-interval-only-3">Confidence Interval Only</h3>

<p>Suppose that you have taken two independent samples from two populations (or performed a completely randomized experiment with two treatment groups), and you have the following summary data:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Group</th>
      <th style="text-align: center">$\bar{x}$</th>
      <th style="text-align: center">$s$</th>
      <th style="text-align: center">$n$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">group one</td>
      <td style="text-align: center">32</td>
      <td style="text-align: center">4.2</td>
      <td style="text-align: center">33</td>
    </tr>
    <tr>
      <td style="text-align: center">group two</td>
      <td style="text-align: center">30</td>
      <td style="text-align: center">5.1</td>
      <td style="text-align: center">42</td>
    </tr>
  </tbody>
</table>

<p>You need to provide the summary data to the arguments <code>mean</code>, <code>sd</code> and <code>n</code>, as lists using the <code>c()</code> function.  In each list, data from the first group should come first.</p>

<p>For a 95%-confidence interval for $\mu_1 - \mu_2$, use:</p>

<pre><code>ttestGC(mean=c(32,30),sd=c(4.2,5.1),n=c(33,42))

## 
## 
## Inferential Procedures for the Difference of Two Means mu1-mu2:
## 	(Welch's Approximation Used for Degrees of Freedom)
## 	Results from summary data.
## 
## 
## Descriptive Results:
## 
##    group mean  sd  n
##  Group 1   32 4.2 33
##  Group 2   30 5.1 42
## 
## 
## Inferential Results:
## 
## Estimate of mu1-mu2:	 2 
## SE(mu1.hat - mu2.hat):	 1.074 
## 
## 95% Confidence Interval for mu1-mu2:
## 
##           lower.bound         upper.bound          
##           -0.140898           4.140898
</code></pre>

<h3 id="interval-and-test-3">Interval and Test</h3>

<p>Suppose that you want a 90%-confidence interval for $\mu_1 - \mu_2$ and that you would like to test the hypotheses:</p>

<blockquote>
  <p>$H_0:  \mu_1 - \mu_2 = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu_1 - \mu_2 &gt; 0$</p>
</blockquote>

<p>Suppose also that want a graph of the $P$-value.  Then use:</p>

<pre><code>ttestGC(mean=c(32,30),sd=c(4.2,5.1),n=c(33,42),
        mu=0,alternative="greater",
        conf.level=0.90,graph=TRUE)

## 
## 
## Inferential Procedures for the Difference of Two Means mu1-mu2:
## 	(Welch's Approximation Used for Degrees of Freedom)
## 	Results from summary data.
## 
## 
## Descriptive Results:
## 
##    group mean  sd  n
##  Group 1   32 4.2 33
##  Group 2   30 5.1 42
## 
## 
## Inferential Results:
## 
## Estimate of mu1-mu2:	 2 
## SE(mu1.hat - mu2.hat):	 1.074 
## 
## 90% Confidence Interval for mu1-mu2:
## 
##           lower.bound         upper.bound          
##           0.610797            Inf                  
## 
## Test of Significance:
## 
## 	H_0:  mu1-mu2 = 0 
## 	H_a:  mu1-mu2 &gt; 0 
## 
## 	Test Statistic:		t = 1.862 
## 	Degrees of Freedom:	  72.82 
## 	P-value:		P = 0.03333
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/ttesttut2meanssummary.png" alt="plot of chunk ttesttut2meanssummary" /> </p>

<h2 id="mean-of-differences">Mean of Differences</h2>

<h3 id="both-variables-in-the-data-frame">Both Variables in the Data Frame</h3>

<h4 id="confidence-interval-only-4">Confidence Interval Only</h4>

<p>Suppose that</p>

<blockquote>
  <p>$\mu_d =$ mean difference (ideal height minus actual height) for all Georgetown College student.</p>
</blockquote>

<p>Both of the relevant variables—<strong>ideal_ht</strong> and <strong>height</strong>—are present in the <code>m111survey</code> data frame.</p>

<p>If you want a 95%-confidence interval for $\mu_d$, then use:</p>

<pre><code>ttestGC(~ideal_ht - height,data=m111survey)

## 
## 
## Inferential Procedures for the Difference of Means mu-d:
## 	 height minus ideal_ht 
## 
## 
## Descriptive Results:
## 
##         Difference mean.difference sd.difference  n
##  ideal_ht - height           1.946         3.206 69
## 
## 
## Inferential Results:
## 
## Estimate of mu-d:	 1.946 
## SE(d.bar):	 0.3859 
## 
## 95% Confidence Interval for mu-d:
## 
##           lower.bound         upper.bound          
##           1.175528            2.715776
</code></pre>

<p>Note how the “~” character signals the presence of a formula.</p>

<h4 id="interval-and-test-4">Interval and Test</h4>

<p>In order to test:</p>

<blockquote>
  <p>$H_0:  \mu_d = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu_d &gt; 0$</p>
</blockquote>

<p>use:</p>

<pre><code>ttestGC(~ideal_ht - height,data=m111survey,
        mu=0,alternative="greater")

## 
## 
## Inferential Procedures for the Difference of Means mu-d:
## 	 height minus ideal_ht 
## 
## 
## Descriptive Results:
## 
##         Difference mean.difference sd.difference  n
##  ideal_ht - height           1.946         3.206 69
## 
## 
## Inferential Results:
## 
## Estimate of mu-d:	 1.946 
## SE(d.bar):	 0.3859 
## 
## 95% Confidence Interval for mu-d:
## 
##           lower.bound         upper.bound          
##           1.302075            Inf                  
## 
## Test of Significance:
## 
## 	H_0:  mu-d = 0 
## 	H_a:  mu-d &gt; 0 
## 
## 	Test Statistic:		t = 5.041 
## 	Degrees of Freedom:	  68 
## 	P-value:		P = 1.826e-06
</code></pre>

<h3 id="the-difference-is-in-the-data-frame">The Difference is in the Data Frame</h3>

<p>Sometimes the difference of the two relevant numerical variables is included in the data frame as another variable:  such is the case for <code>m111survey</code>, where the difference is recorded as the variable <strong>diff.ideal.act.</strong></p>

<p>If you would like to use this difference, then Work just as if you were studying one population mean $\mu$.</p>

<h4 id="confidence-interval-only-5">Confidence Interval Only</h4>

<p>Thus, for a 95%-confidence interval for $\mu_d$ we could also have done:</p>

<pre><code>ttestGC(~diff.ideal.act.,data=m111survey)

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##         variable  mean    sd  n
##  diff.ideal.act. 1.946 3.206 69
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 1.946 
## SE(x.bar):	 0.3859 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           1.175528            2.715776
</code></pre>

<h4 id="interval-and-test-5">Interval and Test</h4>

<p>For a test of</p>

<blockquote>
  <p>$H_0:  \mu_d = 0$</p>
</blockquote>

<blockquote>
  <p>$H_a: \mu_d &gt; 0$</p>
</blockquote>

<p>we could have done:</p>

<pre><code>ttestGC(~diff.ideal.act.,data=m111survey,
        mu=0,alternative="greater")

## 
## 
## Inferential Procedures for One Mean mu:
## 
## 
## Descriptive Results:
## 
##         variable  mean    sd  n
##  diff.ideal.act. 1.946 3.206 69
## 
## 
## Inferential Results:
## 
## Estimate of mu:	 1.946 
## SE(x.bar):	 0.3859 
## 
## 95% Confidence Interval for mu:
## 
##           lower.bound         upper.bound          
##           1.302075            Inf                  
## 
## Test of Significance:
## 
## 	H_0:  mu = 0 
## 	H_a:  mu &gt; 0 
## 
## 	Test Statistic:		t = 5.041 
## 	Degrees of Freedom:	  68 
## 	P-value:		P = 1.826e-06
</code></pre>

<p>Note that in its statement of hypotheses, R identifies the parameter of interest as $\mu$ rather than as $\mu_d$.  It had no way of knowing that <strong>diff.ideal.act.</strong> recorded the difference of a pair of measurements.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pnormGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/26/pnormGCtutorial/"/>
    <updated>2014-02-26T16:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/26/pnormGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#finding-px--x">Finding P(X &lt; x)</a></li>
  <li><a href="#find-px--x">Find P(X &gt; x)</a></li>
  <li><a href="#finding-pa--x--b">Finding P(a &lt; X &lt; b)</a></li>
  <li><a href="#outside-probabilities">“Outside” Probabilities</a></li>
  <li><a href="#non-strict-inequalities">Non-Strict Inequalities</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p><code>pnormGC()</code> provides a direct way to compute probabilities for normal random variables, along with graphs for the probabilities, if you want them.  The function comes from the <code>tigerstats</code> package, so make sure that <code>tigerstats</code> is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need to install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="finding-px--x">Finding P(X &lt; x)</h2>

<p>Suppose that you have a normal random variable $X$ with mean $\mu=70$ and standard deviation $\sigma=3$, and you would like to find the chance that $X$ will turn out to be less than 66.  In other words, you are looking for:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 66). %]]&gt;</script>

<p>Then run this command:</p>

<pre><code>pnormGC(bound=66,region="below",mean=70,sd=3)

## [1] 0.09121
</code></pre>

<p>Note carefully what the arguments mean, here:</p>

<ul>
  <li><code>bound=66</code> tells <code>pnormGC()</code> where to stop</li>
  <li><code>region="below"</code> takes care of the “less than” part of the requested probability</li>
  <li><code>mean=70</code> specifies the mean $\mu$ of $X$</li>
  <li><code>sd=3</code> specifies the standard deviation $\sigma$ of $X$</li>
</ul>

<p>If you would like to see a graph of the probability distribution of $X$ along with a shaded area that represents the requested probability, then you can set the argument <code>graph</code> to <code>TRUE</code>:</p>

<pre><code>pnormGC(bound=66,region="below",
        mean=70,sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/normtutless66.png" alt="plot of chunk normtutless66" /> </p>

<pre><code>## [1] 0.09121
</code></pre>

<p>You should ask for a graph until you are confident of being able to use <code>pnormGC()</code> to get exactly the probability that you want.</p>

<h2 id="find-px--x">Find P(X &gt; x)</h2>

<p>For the same random variable $X \sim norm(70,3)$, suppose we want the probability that $X$ is greater than 69, i.e.:</p>

<script type="math/tex; mode=display">P(X > 69).</script>

<p>Ask for:</p>

<pre><code>pnormGC(bound=69,region="above",
        mean=70,sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/normtutgreater69.png" alt="plot of chunk normtutgreater69" /> </p>

<pre><code>## [1] 0.6306
</code></pre>

<h2 id="finding-pa--x--b">Finding P(a &lt; X &lt; b)</h2>

<p>For the same random variable $X \sim norm(70,3)$, suppose we want the probability that $X$ is between 68 and 72, i.e.:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(68 < X < 72). %]]&gt;</script>

<p>Ask for:</p>

<pre><code>pnormGC(bound=c(68,72),region="between",
        mean=70,sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/normtutbetween.png" alt="plot of chunk normtutbetween" /> </p>

<pre><code>## [1] 0.495
</code></pre>

<p>Observe that since there are two numbers—68 and 72—that are boundaries, we have to specify both of them for <code>pnormGC()</code> in the form of a list <code>c(68,72)</code>.</p>

<h2 id="outside-probabilities">“Outside” Probabilities</h2>

<p>For the same random variable $X \sim norm(70,3)$, suppose we want the probability that either $X$ is less than 66 OR that $X$ is more than 73.  Then we are looking for:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 66 \textbf{ or } X > 73). %]]&gt;</script>

<p>We can find this with the command:</p>

<pre><code>pnormGC(bound=c(66,73),region="outside",
         mean=70,sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/mormtutout.png" alt="plot of chunk mormtutout" /> </p>

<pre><code>## [1] 0.2499
</code></pre>

<p>Again observe that there are two numbers—66 and 73—that make the boundaries, so supply both of them to the <code>bound</code> argument as a list:  <code>c(66,72)</code>.</p>

<h2 id="non-strict-inequalities">Non-Strict Inequalities</h2>

<p>Suppose that for the same random variable $X \sim norm(70,3)$, you want the probability that $X$ will turn out to be <em>no more than</em> 66, i.e., you want:</p>

<script type="math/tex; mode=display">P(X \leq 66).</script>

<p>You get this with exactly the same function call that gives you $P(X &lt; 66)$, namely:</p>

<pre><code>pnormGC(bound=66,region="below",
        mean=70,sd=3)
</code></pre>

<p>Remember why?  Normal random variables are <em>continuous</em> random variables, and for any continuous random variable the chance that it is <em>exactly</em> equal to any particular value is zero.  For example, the probability that $X$ is exactly equal to 66 is given by:</p>

<pre><code>pnormGC(bound=c(66,66),region="between",
        mean=70,sd=3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/normtutequal.png" alt="plot of chunk normtutequal" /> </p>

<pre><code>## [1] 0
</code></pre>

<p>The probability of getting exactly 66 is given by the area of the line segment under the curve over 66.  But the area of a line segment—if you think of it as a “rectangle”” with zero width—is zero!</p>

<p>When you ask for</p>

<script type="math/tex; mode=display">P(X \leq 66)</script>

<p>as opposed to</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 66), %]]&gt;</script>

<p>you are adding on just the chance of $X$ being exactly 66.  Since this extra chance is zero, you get the same probability as you did with the strict inequality.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pbinomGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/26/pbinomGCtutorial/"/>
    <updated>2014-02-26T15:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/26/pbinomGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#finding-px--x">Finding P(X &lt;= x)</a></li>
  <li><a href="#find-px--x">Find P(X &gt;= x)</a></li>
  <li><a href="#strict-inequalities--finding-px--x">Strict Inequalities:  Finding P(X &lt; x)</a></li>
  <li><a href="#strict-inequalities--finding-px--x-1">Strict Inequalities:  Finding P(X &gt; x)</a></li>
  <li><a href="#finding-pa--x--b">Finding P(a &lt;= X &lt;= b)</a></li>
  <li><a href="#finding-px--x-1">Finding P(X = x)</a></li>
  <li><a href="#outside-probabilities">“Outside” Probabilities</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p><code>pbinomGC()</code> provides a direct way to compute probabilities for binomial random variables, along with graphs for the probabilities, if you want them.  The function comes from the <code>tigerstats</code> package, so make sure that <code>tigerstats</code> is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<h2 id="finding-px--x">Finding P(X &lt;= x)</h2>

<p>Suppose that you have a binomial random variable with $n=20$ trials, and chance of success $p=0.3$ on each trial, and you would like to find the chance of getting 8 or fewer successes in your 20 trials.  In other words (letting $X$ stand for the binomial random variable), you are looking for:</p>

<script type="math/tex; mode=display">P(X \leq 8).</script>

<p>Then run this command:</p>

<pre><code>pbinomGC(bound=8,region="below",size=20,prob=0.3)

## [1] 0.8867
</code></pre>

<p>Note carefully what the arguments mean, here:</p>

<ul>
  <li><code>bound=8</code> tells where to stop</li>
  <li><code>region="below"</code> takes care of the “less than” part of the requested probability</li>
  <li><code>size=20</code> tells <code>pbinomGC()</code> the number of trials for $X$</li>
  <li><code>prob=0.3</code> tells <code>pbinomGC()</code> the chance of success on each trial</li>
</ul>

<p>If you would like to see a graph of the probability distribution of $X$ along with a shaded area that represents the requested probability, then you can set the argument <code>graph</code> to <code>TRUE</code>:</p>

<pre><code>pbinomGC(bound=8,region="below",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutleq8.png" alt="plot of chunk binomtutleq8" /> </p>

<pre><code>## [1] 0.8867
</code></pre>

<h2 id="find-px--x">Find P(X &gt;= x)</h2>

<p>For the same random variable $X \sim binom(20,0.3)$, suppose we want the probability of at least 10 successes, i.e.:</p>

<script type="math/tex; mode=display">P(X \geq 10).</script>

<p>When we want to go “above” a given number, <code>pbinomGC()</code> will <em>not</em> include that number in its computation of probabilities, so asking for</p>

<pre><code>pbinomGC(bound=10,region="above",
         size=20,prob=0.3)
</code></pre>

<p>would give us the chance of $X$ being at least 11, which is not what we want.</p>

<p>However, since $X$ can only take on whole number values, $X \geq 10$ means exactly the same thing as $X &gt; 9$, what we really should ask for is:</p>

<pre><code>pbinomGC(bound=9,region="above",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutgeq10.png" alt="plot of chunk binomtutgeq10" /> </p>

<pre><code>## [1] 0.04796
</code></pre>

<p>The shaded area starts at 10, as desired.</p>

<p>It’s a good idea to keep asking for a graph along with your output, so you can check that R is giving you exactly the probability that you need.</p>

<h2 id="strict-inequalities--finding-px--x">Strict Inequalities:  Finding P(X &lt; x)</h2>

<p>For this case we also have to be careful.</p>

<p>For the same random variable $X \sim binom(20,0.3)$, suppose we want the probability of less than 6 successes, i.e.:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 6). %]]&gt;</script>

<p>Since $X$ is a discrete random variable with whole number values, $X &lt; 6$ means exactly the same thing thing as $X \leq 5$.  <code>pbinomGC()</code> includes the bound in the probability that it computes, so we have stop at 5, rather than at 6.  We use the command:</p>

<pre><code>pbinomGC(bound=5,region="below",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutless6.png" alt="plot of chunk binomtutless6" /> </p>

<pre><code>## [1] 0.4164
</code></pre>

<h2 id="strict-inequalities--finding-px--x-1">Strict Inequalities:  Finding P(X &gt; x)</h2>

<p>For the same random variable $X \sim binom(20,0.3)$, suppose we want the probability that the number of successes will be more than 7.  Then we are looking for:</p>

<script type="math/tex; mode=display">P(X > 7).</script>

<p>This is easy again.  Since <code>pbinomGC()</code> does not include the bound when <code>region</code> is “above”, we only need to ask for:</p>

<pre><code>pbinomGC(bound=7,region="above",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutgreater7.png" alt="plot of chunk binomtutgreater7" /> </p>

<pre><code>## [1] 0.2277
</code></pre>

<h2 id="finding-pa--x--b">Finding P(a &lt;= X &lt;= b)</h2>

<p>For the same random variable $X \sim binom(20,0.3)$, suppose we want the probability that the number of successes will be at least 6 but no more than 10.  Then we are looking for:</p>

<script type="math/tex; mode=display">P(6 \leq X \leq 10).</script>

<p>We can find this with the command:</p>

<pre><code>pbinomGC(bound=c(6,10),region="between",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutbetwee.png" alt="plot of chunk binomtutbetwee" /> </p>

<pre><code>## [1] 0.5665
</code></pre>

<p>Notice that there are no two numbers—6 and 10—that make the boundaries, so we must supply both of them to the <code>bound</code> argument as a list:  <code>c(6,10)</code>.  Also note that when <code>region="between"</code>, <code>pbinomGC()</code> includes <em>both</em> of the bounds in its computation of probabilities.</p>

<h2 id="finding-px--x-1">Finding P(X = x)</h2>

<p>To find the chance of $X$ being <em>exactly</em> a particular value, you can employ a little trick.</p>

<p>For example, for the same random variable $X \sim binom(20,0.3)$, suppose we want the chance of exactly 6 successes.  This is very same thing as</p>

<script type="math/tex; mode=display">P(6 \leq X \leq 6),</script>

<p>so you can ask for:</p>

<pre><code>pbinomGC(bound=c(6,6),region="between",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutequal.png" alt="plot of chunk binomtutequal" /> </p>

<pre><code>## [1] 0.1916
</code></pre>

<h2 id="outside-probabilities">“Outside” Probabilities</h2>

<p>This case does not occur very often.</p>

<p>For the same random variable $X \sim binom(20,0.3)$, suppose we want the probability that you either get less than 7 successes OR you get more than 9 successes.  Then we are looking for:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
P(X < 7 \textbf{ or } X > 9). %]]&gt;</script>

<p>You can find this with the command:</p>

<pre><code>pbinomGC(bound=c(7,9),region="outside",
         size=20,prob=0.3,graph=TRUE)
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/binomtutout.png" alt="plot of chunk binomtutout" /> </p>

<pre><code>## [1] 0.656
</code></pre>

<p>Notice that there are two numbers—7 and 9—that make the boundaries, so we must supply both of them to the <code>bound</code> argument as a list:  <code>c(6,10)</code>.  Notice also that when <code>region</code> is set to “outside”, <code>pbinomGC()</code> excludes both bounds.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[barchartGC() Tutorial]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/21/barchartGCtutorial/"/>
    <updated>2014-02-21T16:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/21/barchartGCtutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#one-factor-variable">One Factor Variable</a></li>
  <li><a href="#two-factor-variables">Two Factor Variables</a></li>
  <li><a href="#warning">Warning</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p><code>barchartGC()</code> provides quick-and-easy bar charts for the graphical exploration of factor variables.  The function comes from the <code>tigerstats</code> package and we will use some data from the <code>tigerstats</code> as well, so make sure that <code>tigerstats</code> is loaded:</p>

<pre><code>require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo="homerhanumat/tigerstats")
</code></pre>

<p>In this tutorial we will work with the <code>m111survey</code> data frame from <code>tigerstats</code> package.  If you are not yet familiar with this data, then run:</p>

<pre><code>data(m111survey)
View(m111survey)
help(m111survey)
</code></pre>

<p>Remember that you can also learn about the types of each variable in the data frame with the <code>str()</code> function:</p>

<pre><code>str(m111survey)

## 'data.frame':	71 obs. of  12 variables:
##  $ height         : num  76 74 64 62 72 70.8 70 79 59 67 ...
##  $ ideal_ht       : num  78 76 NA 65 72 NA 72 76 61 67 ...
##  $ sleep          : num  9.5 7 9 7 8 10 4 6 7 7 ...
##  $ fastest        : int  119 110 85 100 95 100 85 160 90 90 ...
##  $ weight_feel    : Factor w/ 3 levels "1_underweight",..: 1 2 2 1 1 3 2 2 2 3 ...
##  $ love_first     : Factor w/ 2 levels "no","yes": 1 1 1 1 1 1 1 1 1 1 ...
##  $ extra_life     : Factor w/ 2 levels "no","yes": 2 2 1 1 2 1 2 2 2 1 ...
##  $ seat           : Factor w/ 3 levels "1_front","2_middle",..: 1 2 2 1 3 1 1 3 3 2 ...
##  $ GPA            : num  3.56 2.5 3.8 3.5 3.2 3.1 3.68 2.7 2.8 NA ...
##  $ enough_Sleep   : Factor w/ 2 levels "no","yes": 1 1 1 1 1 2 1 2 1 2 ...
##  $ sex            : Factor w/ 2 levels "female","male": 2 2 1 1 2 2 2 2 1 1 ...
##  $ diff.ideal.act.: num  2 2 NA 3 0 NA 2 -3 2 0 ...
</code></pre>

<h2 id="one-factor-variable">One Factor Variable</h2>

<p>To look see a bar chart for the tallies of the factor variable <strong>seat</strong>:</p>

<pre><code>barchartGC(~seat,data=m111survey,type="frequency",
           main="Barchart of Seating Preference")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartseatfreq.png" alt="plot of chunk barchartseatfreq" /> </p>

<p>In order to get the actual distribution of <strong>seat</strong>, you want percents rather than counts:</p>

<pre><code>barchartGC(~seat,data=m111survey,type="percent",
           main="Barchart of Seating Preference")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartseatperc.png" alt="plot of chunk barchartseatperc" /> </p>

<p>If you have a table of the counts for a variable, then you can enter it directly.  For example, suppose you have already made:</p>

<pre><code>Seat &lt;- xtabs(~seat,data=m111survey)
Seat

## seat
##  1_front 2_middle   3_back 
##       27       32       12
</code></pre>

<p>Then you can just enter the table:</p>

<pre><code>barchartGC(Seat,type="percent",
           main="Barchart of Seating Preference")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartseattab.png" alt="plot of chunk barchartseattab" /> </p>

<h2 id="two-factor-variables">Two Factor Variables</h2>

<p>You can also use <code>barchartGC()</code> to study the relationship between two factor variables.  For example, if you want to see whether males and females differ in their seating preferences, then you might try formula-data input as follows:</p>

<pre><code>barchartGC(~sex+seat,data=m111survey,
           type="percent",
           main="Sex and Seating Preference\nat Georgetown")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartsexseat.png" alt="plot of chunk barchartsexseat" /> </p>

<p>Again, if you happen to have already made a two-way table, then you can just enter it:</p>

<pre><code>SexSeat &lt;- xtabs(~sex+seat,data=m111survey)
SexSeat

##         seat
## sex      1_front 2_middle 3_back
##   female      19       16      5
##   male         8       16      7
</code></pre>

<p>Here is the bar chart from the two-way table:</p>

<pre><code>barchartGC(SexSeat,type="percent",
           main="Sex and Seating Preference\nat Georgetown")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartsexseattab.png" alt="plot of chunk barchartsexseattab" /> </p>

<h2 id="warning">Warning</h2>

<p>Bar charts are for factor variables, not for numerical variables.  Look what happens when you ask for a bar chart of <strong>fastest</strong>:</p>

<pre><code>barchartGC(~fastest,data=m111survey,
           main="Fastest Speed Ever Driven")
</code></pre>

<p><img src="http://statistics.rainandrhino.org/images/figure/barchartfastest.png" alt="plot of chunk barchartfastest" /> </p>

<p>R tries to accommodate your request, but it ends up making something that resembles a very amateurish histogram.  R draws a separate bar for each speed that appears in the data, making for a very “busy” graph.  Worse yet, consecutive speeds are equally spaced from each other, even though the differences between consecutive speeds vary.  For example, the spacing between the 90 ans 91 mph bars is the same as the spacing between the 160 and 190 mph bars.  This is very misleading!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial on Mosaic's Favstats()]]></title>
    <link href="http://statistics.rainandrhino.org/blog/2014/02/21/favstatstutorial/"/>
    <updated>2014-02-21T15:00:00-05:00</updated>
    <id>http://statistics.rainandrhino.org/blog/2014/02/21/favstatstutorial</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#preliminaries">Preliminaries</a></li>
  <li><a href="#studying-one-numerical-variable">Studying One Numerical Variable</a></li>
  <li><a href="#studying-the-relationship-between-a-numerical-variable-and-a-factor-variable">Studying the Relationship Between a Numerical Variable and a Factor Variable</a></li>
  <li><a href="#limiting-the-output">Limiting the Output</a></li>
  <li><a href="#warning">Warning</a></li>
</ul>

<h2 id="preliminaries">Preliminaries</h2>

<p><code>favstats()</code> comes from the <code>mosaic</code> package and we will use some data from the <code>tigerstats</code> package, so make sure that both are loaded:</p>

<pre><code>require(mosaic)
require(tigerstats)
</code></pre>

<p><strong>Note:</strong>  If you are not working with the R Studio server hosted by Georgetown College, then you will need install <code>tigerstats</code> on your own machine.  You can get the current version from <a href="http://github.com">Github</a> by first installing the <code>devtools</code> package from the CRAN repository, and then running the following commands in a fresh R session:</p>

<pre><code>require(devtools)
install_github(repo = "homerhanumat/tigerstats")
</code></pre>

<p>In this tutorial we will work with the <code>m111survey</code> data frame from <code>tigerstats</code> package.  If you are not yet familiar with this data, then run:</p>

<pre><code>data(m111survey)
View(m111survey)
help(m111survey)
</code></pre>

<p>Remember that you can also learn about the types of each variable in the data frame with the <code>str()</code> function:</p>

<pre><code>str(m111survey)

## 'data.frame':	71 obs. of  12 variables:
##  $ height         : num  76 74 64 62 72 70.8 70 79 59 67 ...
##  $ ideal_ht       : num  78 76 NA 65 72 NA 72 76 61 67 ...
##  $ sleep          : num  9.5 7 9 7 8 10 4 6 7 7 ...
##  $ fastest        : int  119 110 85 100 95 100 85 160 90 90 ...
##  $ weight_feel    : Factor w/ 3 levels "1_underweight",..: 1 2 2 1 1 3 2 2 2 3 ...
##  $ love_first     : Factor w/ 2 levels "no","yes": 1 1 1 1 1 1 1 1 1 1 ...
##  $ extra_life     : Factor w/ 2 levels "no","yes": 2 2 1 1 2 1 2 2 2 1 ...
##  $ seat           : Factor w/ 3 levels "1_front","2_middle",..: 1 2 2 1 3 1 1 3 3 2 ...
##  $ GPA            : num  3.56 2.5 3.8 3.5 3.2 3.1 3.68 2.7 2.8 NA ...
##  $ enough_Sleep   : Factor w/ 2 levels "no","yes": 1 1 1 1 1 2 1 2 1 2 ...
##  $ sex            : Factor w/ 2 levels "female","male": 2 2 1 1 2 2 2 2 1 1 ...
##  $ diff.ideal.act.: num  2 2 NA 3 0 NA 2 -3 2 0 ...
</code></pre>

<h2 id="studying-one-numerical-variable">Studying One Numerical Variable</h2>

<p>“favstats” is short for “favorite statistics”:  it will give you the some of the most popular summary statistics for numerical variables.</p>

<p>Suppose, for example, that you want to know how fast people in the <code>m111survey</code> sample tend to drive, when they drive their fastest. The you want to study the numerical variable <strong>fastest</strong>:  the fastest speed each person claims to have ever driven, measured in miles per hour.  Just try <code>favstats()</code> with the usual formula-data input:</p>

<pre><code>favstats(~fastest, data = m111survey)

##  min   Q1 median    Q3 max  mean    sd  n missing
##   60 90.5    102 119.5 190 105.9 20.88 71       0
</code></pre>

<p>Remember what each of the statistics tells you:</p>

<ul>
  <li>The minimum fastest speed drive by anyone in the survery was 60 mph.</li>
  <li>The maximum fastest speed was 190 mph.</li>
  <li>About 25% of the survey participants drove less than 90.5 mph (the First Quartile)</li>
  <li>About 75% percent of the survey participants drove less than 119.5 mph (the Third Quartile)</li>
  <li>About 50% of the participants drove less than 102 mph (the median)</li>
  <li>The mean speed for this sample of students was about 105.9 mph …</li>
  <li>… give or take about 20.9 mph or so (the standard deviation).</li>
</ul>

<p>We also see that</p>

<ul>
  <li>71 people answered the question about fastest speed;</li>
  <li>Nobody did not answer (missing = 0).</li>
</ul>

<h2 id="studying-the-relationship-between-a-numerical-variable-and-a-factor-variable">Studying the Relationship Between a Numerical Variable and a Factor Variable</h2>

<p>Studying the relationship between a numerical variable and factor variable involves what is popularly known as “breaking the data into groups” based on the values of the factor variable.  More formally, we obtain the conditional distributions of the numerical variable given the various possible values of the factor variable, and look for difference between these distributions.  If we see large differences. then we know that the factor variable “makes a difference” in the likely values of the numerical variable, i.e., the two variable are related.</p>

<p>For example we might want to know if the fastest speed one drives might be related to one’s sex.  The relevant variables in <code>m111survey</code> are then the numerical <strong>fastest</strong> and the factor variable <strong>sex</strong>.</p>

<p>In formula-data input for <code>favstats()</code> the formula always follows the format:</p>

<script type="math/tex; mode=display">numerical \sim factor.</script>

<p>So we run the following command:</p>

<pre><code>favstats(fastest ~ sex, data = m111survey)

##   .group min Q1 median    Q3 max  mean    sd  n missing
## 1 female  60 90     95 110.0 145 100.0 17.61 40       0
## 2   male  85 99    110 122.5 190 113.5 22.57 31       0
</code></pre>

<p>The first row of the output gives a summary of the conditional distribution of <strong>fastest</strong>, given that <strong>sex</strong> is female.</p>

<p>The second row summarizes the conditional distribution of <strong>fastest</strong>, given that <strong>sex</strong> is male.</p>

<p>The two conditional distribution are not the same.  For example, we see that on average females drove about 100 mph, whereas the guys drove about 113.4 mph.  The guys appear to drive faster than the gals:  for this sample of students, fastest speed drive does indeed appear to be related to sex.</p>

<h2 id="limiting-the-output">Limiting the Output</h2>

<p>Sometimes you want just a few of the numbers from <code>favstats()</code>.  If you would like to display only those numbers you can do so using brackets “[” and “]”, along with a list of the names of the columns you want to see.  For example, to display only the means and the standard deviations for <strong>fastest</strong>, ask for:</p>

<pre><code>favstats(fastest, data = m111survey)[c("mean", "sd")]

##   mean    sd
##  105.9 20.88
</code></pre>

<p>The brackets are R’s way of locating particular parts of an object.  If you want to display more than one column, make sure to combine their names (in quotes) in a list with the <code>c()</code> function, as shown above.</p>

<p>When you are breaking a numerical variable into groups, you will probably also want to see the group names:  this requires the addition of the column named <code>.group</code>.  Therefore, to see just the mean and the standard deviation for <strong>fastest</strong> broken down by <strong>sex</strong>, ask for:</p>

<pre><code>favstats(fastest ~ sex, data = m111survey)[c(".group", "mean", "sd")]

##   .group  mean    sd
## 1 female 100.0 17.61
## 2   male 113.5 22.57
</code></pre>

<h2 id="warning">Warning</h2>

<p><code>favstats()</code> specializes in numerical variables:  it won’t help you to study a factor variable by itself.  Look what happens when you try to use it to study the factor variable <strong>sex</strong>:</p>

<pre><code>favstats(~sex, data = m111survey)

## Error: non-numeric argument to binary operator
</code></pre>

]]></content>
  </entry>
  
</feed>
